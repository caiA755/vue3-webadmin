{"ast":null,"code":"// 按需引入\nimport * as echarts from 'echarts';\nimport { TitleComponent, TooltipComponent, LegendComponent } from 'echarts/components';\nimport { PieChart } from 'echarts/charts';\nimport { LabelLayout } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport china from '@/assets/json/china';\nimport { registerMap } from 'echarts/core';\necharts.use([TitleComponent, TooltipComponent, LegendComponent, PieChart, CanvasRenderer, LabelLayout]);\nexport default {\n  name: 'goodspanel',\n\n  data() {\n    let userOriginData = {\n      title: {\n        text: '用户访问来源',\n        subtext: '虚构数据',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left'\n      },\n      series: [{\n        name: 'Access From',\n        type: 'pie',\n        radius: '50%',\n        data: [{\n          value: 1048,\n          name: '搜索引擎'\n        }, {\n          value: 735,\n          name: '直接访问'\n        }, {\n          value: 580,\n          name: '邮件营销'\n        }, {\n          value: 484,\n          name: '联盟广告'\n        }, {\n          value: 300,\n          name: '视频广告'\n        }],\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }]\n    };\n    let orderCityData = {\n      title: {\n        text: '',\n        subtext: '不同城市商品销量',\n        sublink: 'http://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%A1%8C%E6%94%BF%E5%8D%80%E5%8A%83#cite_note-12'\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: '{b}<br/>{c}'\n      },\n      toolbox: {\n        show: true,\n        orient: 'vertical',\n        left: 'right',\n        top: 'center',\n        feature: {\n          dataView: {\n            readOnly: false\n          },\n          restore: {},\n          saveAsImage: {}\n        }\n      },\n      visualMap: {\n        min: 800,\n        max: 50000,\n        text: ['High', 'Low'],\n        realtime: false,\n        calculable: true,\n        inRange: {\n          color: ['lightskyblue', 'yellow', 'orangered']\n        }\n      },\n      series: [{\n        name: '',\n        type: 'map',\n        map: 'china',\n        label: {\n          show: false\n        },\n        data: [{\n          name: '湖南省',\n          value: 7990\n        }, {\n          name: '广东省',\n          value: 8880\n        }, {\n          name: '山西省',\n          value: 8880\n        }] // 自定义名称映射\n        // nameMap: {\n        //   \"湖南省\"\n        // }\n\n      }]\n    };\n    let categoryCountData = {\n      title: {\n        text: '',\n        subtext: '分类商品数量',\n        left: 'left'\n      },\n      legend: {\n        top: 'bottom'\n      },\n      toolbox: {\n        show: true,\n        feature: {\n          mark: {\n            show: true\n          },\n          dataView: {\n            show: true,\n            readOnly: false\n          },\n          restore: {\n            show: true\n          },\n          saveAsImage: {\n            show: true\n          }\n        }\n      },\n      series: [{\n        name: 'Nightingale Chart',\n        type: 'pie',\n        radius: [10, 110],\n        center: ['50%', '50%'],\n        roseType: 'area',\n        itemStyle: {\n          borderRadius: 8\n        },\n        data: [{\n          value: 40,\n          name: '牛奶区'\n        }, {\n          value: 38,\n          name: '水果区'\n        }, {\n          value: 32,\n          name: '辣条区'\n        }, {\n          value: 30,\n          name: '运动区1'\n        }, {\n          value: 28,\n          name: '运动区2'\n        }, {\n          value: 26,\n          name: '运动区3'\n        }, {\n          value: 22,\n          name: '运动区4'\n        }, {\n          value: 18,\n          name: '运动区5'\n        }]\n      }]\n    };\n    let orderCountData = {\n      title: {\n        text: '',\n        subtext: '分类商品销量'\n      },\n      xAxis: {\n        type: 'category',\n        data: ['牛奶区', '水果区', '辣条区', '运动区', '运动区', '运动区', '运动区']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      toolbox: {\n        show: true,\n        feature: {\n          mark: {\n            show: true\n          },\n          // dataView: { show: true, readOnly: false },\n          restore: {\n            show: true\n          },\n          saveAsImage: {\n            show: true\n          }\n        }\n      },\n      series: [{\n        data: [150, 230, 224, 218, 135, 147, 260],\n        type: 'line'\n      }]\n    };\n    let dataAxis = ['牛奶区', '水果区', '辣条区', '运动区', '运动区', '运动区', '运动区']; // prettier-ignore\n\n    let data = [220, 182, 191, 234, 290, 330, 310, 123, 442, 321, 90, 149, 210, 122, 133, 334, 198, 123, 125, 220];\n    let categoryCollectData = {\n      title: {\n        text: '',\n        subtext: '分类商品的收藏'\n      },\n      xAxis: {\n        data: dataAxis,\n        axisLabel: {\n          inside: true,\n          color: '#fff'\n        },\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: false\n        },\n        z: 10\n      },\n      yAxis: {\n        axisLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLabel: {\n          color: '#999'\n        }\n      },\n      dataZoom: [{\n        type: 'inside'\n      }],\n      series: [{\n        type: 'bar',\n        showBackground: true,\n        itemStyle: {\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n            offset: 0,\n            color: '#83bff6'\n          }, {\n            offset: 0.5,\n            color: '#188df0'\n          }, {\n            offset: 1,\n            color: '#188df0'\n          }])\n        },\n        emphasis: {\n          itemStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: '#2378f7'\n            }, {\n              offset: 0.7,\n              color: '#2378f7'\n            }, {\n              offset: 1,\n              color: '#83bff6'\n            }])\n          }\n        },\n        data: data\n      }]\n    };\n    ;\n    return {\n      userOriginData,\n      orderCityData,\n      categoryCountData,\n      orderCountData,\n      categoryCollectData,\n      data,\n      dataAxis\n    };\n  },\n\n  mounted() {\n    this.getUserOrigin();\n    this.getOrderCity();\n    this.getCategoryCount();\n    this.getOrderCount();\n    this.getCategoryCollect();\n  },\n\n  methods: {\n    getUserOrigin() {\n      let echart_userOrigin = echarts.init(document.getElementById('echart_userOrigin'), null, {\n        height: \"350px\"\n      });\n      echart_userOrigin.setOption(this.userOriginData);\n      window.addEventListener(\"resize\", function () {\n        echart_userOrigin.resize();\n      });\n    },\n\n    getOrderCity() {\n      let echart_orderCity = echarts.init(document.getElementById('echart_orderCity'), null, {\n        height: \"350px\"\n      });\n      echarts.registerMap('china', china);\n      echart_orderCity.setOption(this.orderCityData);\n      window.addEventListener(\"resize\", function () {\n        echart_orderCity.resize();\n      });\n    },\n\n    getCategoryCount() {\n      let echart_categoryCount = echarts.init(document.getElementById('echart_categoryCount'), null, {\n        height: \"350px\"\n      });\n      echart_categoryCount.setOption(this.categoryCountData);\n      window.addEventListener(\"resize\", function () {\n        echart_categoryCount.resize();\n      });\n    },\n\n    getOrderCount() {\n      let echart_orderCount = echarts.init(document.getElementById('echart_orderCount'), null, {\n        height: \"390px\"\n      });\n      echart_orderCount.setOption(this.orderCountData);\n      window.addEventListener(\"resize\", function () {\n        echart_orderCount.resize();\n      });\n    },\n\n    getCategoryCollect() {\n      let echart_categoryCollect = echarts.init(document.getElementById('echart_categoryCollect'), null, {\n        height: \"390px\"\n      });\n      let yMax = 500;\n      let dataShadow = [];\n      let len = this.data.length;\n\n      for (let i = 0; i < len; i++) {\n        dataShadow.push(yMax);\n      }\n\n      ;\n      const zoomSize = 6;\n      echart_categoryCollect.on('click', function (params) {\n        console.log(this.dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)]);\n        echart_categoryCollect.dispatchAction({\n          type: 'dataZoom',\n          startValue: this.dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)],\n          endValue: this.dataAxis[Math.min(params.dataIndex + zoomSize / 2, this.data.length - 1)]\n        });\n      });\n      echart_categoryCollect.setOption(this.categoryCollectData);\n      window.addEventListener(\"resize\", function () {\n        echart_categoryCollect.resize();\n      });\n    }\n\n  },\n\n  setup() {\n    return {};\n  }\n\n};","map":null,"metadata":{},"sourceType":"module"}