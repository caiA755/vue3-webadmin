{"ast":null,"code":"// import HelloWorld from './components/HelloWorld.vue'\n// 按需引用\n// import { ElButton } from 'element-plus'\n// import 'element-plus/theme-chalk/el-button.css'\nimport 'element-plus/theme-chalk/index.css';\nimport { ElLoading } from \"element-plus\";\nimport { loadingPage } from \"./service/axios_config\";\nexport default {\n  name: 'App',\n\n  data() {\n    return {\n      a: \"a\"\n    };\n  },\n\n  created: function () {// let a=ElLoading.service({ fullscreen: true, text: \"你好\" });\n    //  setTimeout(function(){\n    //   a.close();\n    //  },300);\n    // handler();\n  },\n  components: {// HelloWorld\n  },\n  methods: {\n    handler() {\n      //添加拦截请求器\n      let loadingInstance = null;\n      axios.interceptors.request.use(function (config) {\n        //在发送请求之前做些什么\n        loadingInstance = ElLoading.service({\n          fullscreen: true,\n          text: \"你好\"\n        });\n        return config;\n      }, function (error) {\n        //对请求错误做些什么\n        return Promise.reject(error);\n      }); // 声明响应拦截器\n\n      axios.interceptors.response.use(response => {\n        // 隐藏 Loading 效果\n        loadingInstance.close();\n        return response;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAaA;AACA;AACA;AACA;AACA,OAAO,oCAAP;AACA,SAASA,SAAT,QAA0B,cAA1B;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AAEA,eAAgB;EACdC,IAAI,EAAE,KADQ;;EAEdC,IAAI,GAAE;IACJ,OAAM;MACJC,CAAC,EAAC;IADE,CAAN;EAGD,CANa;;EAOdC,OAAO,EAAC,YAAU,CACd;IACA;IACA;IACA;IACA;EACH,CAba;EAcdC,UAAU,EAAE,CACV;EADU,CAdE;EAiBbC,OAAO,EAAC;IACNC,OAAO,GAAE;MACL;MACD,IAAIC,eAAc,GAAI,IAAtB;MACAC,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAASC,MAAT,EAAiB;QAC5C;QACAL,eAAc,GAAIT,SAAS,CAACe,OAAV,CAAkB;UAAEC,UAAU,EAAE,IAAd;UAAoBC,IAAI,EAAE;QAA1B,CAAlB,CAAlB;QACA,OAAOH,MAAP;MACH,CAJD,EAIG,UAASI,KAAT,EAAgB;QACf;QACA,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;MACH,CAPD,EAHM,CAWN;;MACAR,KAAK,CAACC,YAAN,CAAmBU,QAAnB,CAA4BR,GAA5B,CAAiCQ,QAAD,IAAc;QAC1C;QACAZ,eAAe,CAACa,KAAhB;QACA,OAAOD,QAAP;MACH,CAJD;IAKH;;EAlBM;AAjBK,CAAhB","names":["ElLoading","loadingPage","name","data","a","created","components","methods","handler","loadingInstance","axios","interceptors","request","use","config","service","fullscreen","text","error","Promise","reject","response","close"],"sourceRoot":"","sources":["E:\\CaiCai\\前端学习\\Vue学习\\job-web-vue3\\src\\App.vue"],"sourcesContent":["<template>\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n  <!-- <HelloWorld msg=\"Welcome to Your Vue.js App\"/> -->\n    <div>\n      <el-button>AAAAAAA</el-button>\n       <el-button type=\"info\">AAAAAAA</el-button>\n    </div>\n  <el-calendar/>\n    <el-link>aaa</el-link>\n    <p>{{a}}</p>\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld.vue'\n// 按需引用\n// import { ElButton } from 'element-plus'\n// import 'element-plus/theme-chalk/el-button.css'\nimport 'element-plus/theme-chalk/index.css'\nimport { ElLoading } from \"element-plus\";\nimport {loadingPage} from \"./service/axios_config\";\n\nexport default  {\n  name: 'App',\n  data(){\n    return{\n      a:\"a\"\n    }\n  },\n  created:function(){\n      // let a=ElLoading.service({ fullscreen: true, text: \"你好\" });\n      //  setTimeout(function(){\n      //   a.close();\n      //  },300);\n      // handler();\n  },\n  components: {\n    // HelloWorld\n  },\n   methods:{\n     handler(){\n         //添加拦截请求器\n        let loadingInstance = null\n        axios.interceptors.request.use(function(config) {\n            //在发送请求之前做些什么\n            loadingInstance = ElLoading.service({ fullscreen: true, text: \"你好\" });\n            return config;\n        }, function(error) {\n            //对请求错误做些什么\n            return Promise.reject(error);\n        });\n        // 声明响应拦截器\n        axios.interceptors.response.use((response) => {\n            // 隐藏 Loading 效果\n            loadingInstance.close();\n            return response;\n        });\n     }\n    }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}