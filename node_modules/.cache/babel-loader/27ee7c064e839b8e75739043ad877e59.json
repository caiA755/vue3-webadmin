{"ast":null,"code":"import axios from 'axios';\nimport { Promise } from 'core-js';\nimport { ElLoading } from \"element-plus\";\nconst config = {\n  headers: {\n    'X-Bmob-Application-Id': 'e536863a0210f9b43a1e5344b785de3d',\n    'X-Bmob-REST-API-Key': '37b324a62cedd302e6a22fc84e622a5a',\n    'Content-Type': 'application/json'\n  },\n  baseURL: \"https://api2.bmob.cn\",\n  timeout: 50000\n}; //全局配置\n\naxios.defaults.baseURL = config.baseURL;\naxios.defaults.headers = config.headers; //axios实例\n\naxios.get('/1/classes/_User').then(res => {\n  console.log(res);\n});\n\nfunction loadingPage() {\n  //添加拦截请求器\n  let loadingInstance = null;\n  axios.interceptors.request.use(function (config) {\n    //在发送请求之前做些什么\n    loadingInstance = ElLoading.service({\n      fullscreen: true,\n      text: \"你好\"\n    });\n    return config;\n  }, function (error) {\n    //对请求错误做些什么\n    return Promise.reject(error);\n  }); // 声明响应拦截器\n\n  axios.interceptors.response.use(response => {\n    // 隐藏 Loading 效果\n    loadingInstance.close();\n    return response;\n  });\n}\n\nexport default loadingPage;","map":{"version":3,"names":["axios","Promise","ElLoading","config","headers","baseURL","timeout","defaults","get","then","res","console","log","loadingPage","loadingInstance","interceptors","request","use","service","fullscreen","text","error","reject","response","close"],"sources":["E:/CaiCai/前端学习/Vue学习/job-web-vue3/src/service/axios_config.js"],"sourcesContent":["import axios from 'axios'\r\nimport { Promise } from 'core-js';\r\nimport { ElLoading } from \"element-plus\";\r\n\r\nconst config = {\r\n    headers: {\r\n        'X-Bmob-Application-Id': 'e536863a0210f9b43a1e5344b785de3d',\r\n        'X-Bmob-REST-API-Key': '37b324a62cedd302e6a22fc84e622a5a',\r\n        'Content-Type': 'application/json'\r\n    },\r\n    baseURL: \"https://api2.bmob.cn\",\r\n    timeout: 50000,\r\n};\r\n//全局配置\r\naxios.defaults.baseURL = config.baseURL;\r\naxios.defaults.headers = config.headers;\r\n//axios实例\r\naxios.get('/1/classes/_User').then((res) => {\r\n    console.log(res);\r\n});\r\n\r\nfunction loadingPage() {\r\n    //添加拦截请求器\r\n    let loadingInstance = null\r\n    axios.interceptors.request.use(function(config) {\r\n        //在发送请求之前做些什么\r\n        loadingInstance = ElLoading.service({ fullscreen: true, text: \"你好\" })\r\n        return config;\r\n    }, function(error) {\r\n        //对请求错误做些什么\r\n        return Promise.reject(error);\r\n    });\r\n    // 声明响应拦截器\r\n    axios.interceptors.response.use((response) => {\r\n        // 隐藏 Loading 效果\r\n        loadingInstance.close()\r\n        return response\r\n    });\r\n}\r\nexport default loadingPage;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,MAAMC,MAAM,GAAG;EACXC,OAAO,EAAE;IACL,yBAAyB,kCADpB;IAEL,uBAAuB,kCAFlB;IAGL,gBAAgB;EAHX,CADE;EAMXC,OAAO,EAAE,sBANE;EAOXC,OAAO,EAAE;AAPE,CAAf,C,CASA;;AACAN,KAAK,CAACO,QAAN,CAAeF,OAAf,GAAyBF,MAAM,CAACE,OAAhC;AACAL,KAAK,CAACO,QAAN,CAAeH,OAAf,GAAyBD,MAAM,CAACC,OAAhC,C,CACA;;AACAJ,KAAK,CAACQ,GAAN,CAAU,kBAAV,EAA8BC,IAA9B,CAAoCC,GAAD,IAAS;EACxCC,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,CAFD;;AAIA,SAASG,WAAT,GAAuB;EACnB;EACA,IAAIC,eAAe,GAAG,IAAtB;EACAd,KAAK,CAACe,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAASd,MAAT,EAAiB;IAC5C;IACAW,eAAe,GAAGZ,SAAS,CAACgB,OAAV,CAAkB;MAAEC,UAAU,EAAE,IAAd;MAAoBC,IAAI,EAAE;IAA1B,CAAlB,CAAlB;IACA,OAAOjB,MAAP;EACH,CAJD,EAIG,UAASkB,KAAT,EAAgB;IACf;IACA,OAAOpB,OAAO,CAACqB,MAAR,CAAeD,KAAf,CAAP;EACH,CAPD,EAHmB,CAWnB;;EACArB,KAAK,CAACe,YAAN,CAAmBQ,QAAnB,CAA4BN,GAA5B,CAAiCM,QAAD,IAAc;IAC1C;IACAT,eAAe,CAACU,KAAhB;IACA,OAAOD,QAAP;EACH,CAJD;AAKH;;AACD,eAAeV,WAAf"},"metadata":{},"sourceType":"module"}