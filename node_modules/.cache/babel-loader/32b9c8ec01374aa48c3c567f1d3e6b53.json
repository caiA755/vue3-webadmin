{"ast":null,"code":"import { createRouter, createWebHistory, createWebHashHistory } from \"vue-router\";\nimport { RouteRecordRaw } from 'vue-router';\nimport LoginPlane from \"../views/login/cpns/login-panel\";\nimport LoginName from \"../views/login/login-name\";\nimport MainName from '@/views/main/main-name';\nimport HelloWorld from '@/components/HelloWorld.vue';\nimport localCache from '@/utils/cache.js';\nimport mainurl from '@/service/url/mainurl';\nimport cRequest1 from '@/service/index.js';\nlet router = createRouter({\n  history: createWebHashHistory(),\n  routes: [// 路由列表，里面的每一个成员都是一个url地址和组件的映射关系\n  {\n    path: \"/\",\n    component: LoginName\n  }, {\n    name: \"main\",\n    path: \"/main\",\n    component: MainName\n  },, {\n    name: \"heallo\",\n    path: \"/heallo\",\n    component: HelloWorld\n  }],\n  children: [{\n    path: \"wu\",\n    name: \"wu\",\n    component: LoginPlane\n  }]\n});\nrouter.beforeEach((to, form) => {\n  let userinfo = localCache.getCache(\"userinfo\");\n  let roleid;\n  cRequest1.getRequest(mainurl.userroleUrl, `{\"user_id\":\"${userinfo.username}\"}&include=tb_user.username`).then(res => {\n    roleid = res.results[0].role_id.objectId;\n  }).then(res => {\n    console.log(\"res\", res);\n  }); // console.log(roleid);\n  // //查询菜单 查询roleid 根据roleid显示不同的菜单\n  // let menu_array = [];\n  // let result;\n  // cRequest1.getRequest(mainurl.rolemenuUrl, `{\"role_id\":\"${roleid}\"}&include=menu_id`).then((res) => {\n  //     result = res.results;\n  // });\n  // //将菜单信息进行处理\n  // result.forEach((element) => {\n  //     if (element.menu_id.type === 1 || element.menu_id.type === 3) {\n  //         menu_array.push(element.menu_id);\n  //     }\n  // });\n  // for (let i = 0; i < menu_array.length; i++) {\n  //     cRequest1.getRequest(mainurl.menuUrl, `{\"parent_id\":\"${menu_array[i].objectId}\",\"type\":2}`).then((res) => {\n  //         menu_array[i].children = res.results;\n  //     })\n  // }\n  // localCache.setCache(\"menuinfo\", menu_array);\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","createWebHashHistory","RouteRecordRaw","LoginPlane","LoginName","MainName","HelloWorld","localCache","mainurl","cRequest1","router","history","routes","path","component","name","children","beforeEach","to","form","userinfo","getCache","roleid","getRequest","userroleUrl","username","then","res","results","role_id","objectId","console","log"],"sources":["E:/CaiCai/前端学习/Vue学习/job-web-vue3/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory, createWebHashHistory } from \"vue-router\"\r\nimport { RouteRecordRaw } from 'vue-router'\r\n\r\nimport LoginPlane from \"../views/login/cpns/login-panel\";\r\nimport LoginName from \"../views/login/login-name\";\r\nimport MainName from '@/views/main/main-name'\r\nimport HelloWorld from '@/components/HelloWorld.vue'\r\nimport localCache from '@/utils/cache.js'\r\nimport mainurl from '@/service/url/mainurl'\r\nimport cRequest1 from '@/service/index.js';\r\n\r\nlet router = createRouter({\r\n    history: createWebHashHistory(),\r\n    routes: [ // 路由列表，里面的每一个成员都是一个url地址和组件的映射关系\r\n        {\r\n            path: \"/\",\r\n            component: LoginName,\r\n        },\r\n        {\r\n            name: \"main\",\r\n            path: \"/main\",\r\n            component: MainName,\r\n        }, ,\r\n        {\r\n            name: \"heallo\",\r\n            path: \"/heallo\",\r\n            component: HelloWorld,\r\n        }\r\n    ],\r\n    children: [{\r\n        path: \"wu\",\r\n        name: \"wu\",\r\n        component: LoginPlane\r\n    }]\r\n});\r\nrouter.beforeEach((to, form) => {\r\n    let userinfo = localCache.getCache(\"userinfo\");\r\n    let roleid;\r\n    cRequest1.getRequest(mainurl.userroleUrl, `{\"user_id\":\"${userinfo.username}\"}&include=tb_user.username`).then((res) => {\r\n        roleid = res.results[0].role_id.objectId;\r\n    }).then((res) => {\r\n        console.log(\"res\", res);\r\n    });\r\n    // console.log(roleid);\r\n    // //查询菜单 查询roleid 根据roleid显示不同的菜单\r\n    // let menu_array = [];\r\n    // let result;\r\n    // cRequest1.getRequest(mainurl.rolemenuUrl, `{\"role_id\":\"${roleid}\"}&include=menu_id`).then((res) => {\r\n    //     result = res.results;\r\n    // });\r\n    // //将菜单信息进行处理\r\n    // result.forEach((element) => {\r\n    //     if (element.menu_id.type === 1 || element.menu_id.type === 3) {\r\n    //         menu_array.push(element.menu_id);\r\n    //     }\r\n    // });\r\n\r\n    // for (let i = 0; i < menu_array.length; i++) {\r\n    //     cRequest1.getRequest(mainurl.menuUrl, `{\"parent_id\":\"${menu_array[i].objectId}\",\"type\":2}`).then((res) => {\r\n    //         menu_array[i].children = res.results;\r\n    //     })\r\n    // }\r\n\r\n    // localCache.setCache(\"menuinfo\", menu_array);\r\n})\r\nexport default router"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,EAAyCC,oBAAzC,QAAqE,YAArE;AACA,SAASC,cAAT,QAA+B,YAA/B;AAEA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,IAAIC,MAAM,GAAGX,YAAY,CAAC;EACtBY,OAAO,EAAEV,oBAAoB,EADP;EAEtBW,MAAM,EAAE,CAAE;EACN;IACIC,IAAI,EAAE,GADV;IAEIC,SAAS,EAAEV;EAFf,CADI,EAKJ;IACIW,IAAI,EAAE,MADV;IAEIF,IAAI,EAAE,OAFV;IAGIC,SAAS,EAAET;EAHf,CALI,GAUJ;IACIU,IAAI,EAAE,QADV;IAEIF,IAAI,EAAE,SAFV;IAGIC,SAAS,EAAER;EAHf,CAVI,CAFc;EAkBtBU,QAAQ,EAAE,CAAC;IACPH,IAAI,EAAE,IADC;IAEPE,IAAI,EAAE,IAFC;IAGPD,SAAS,EAAEX;EAHJ,CAAD;AAlBY,CAAD,CAAzB;AAwBAO,MAAM,CAACO,UAAP,CAAkB,CAACC,EAAD,EAAKC,IAAL,KAAc;EAC5B,IAAIC,QAAQ,GAAGb,UAAU,CAACc,QAAX,CAAoB,UAApB,CAAf;EACA,IAAIC,MAAJ;EACAb,SAAS,CAACc,UAAV,CAAqBf,OAAO,CAACgB,WAA7B,EAA2C,eAAcJ,QAAQ,CAACK,QAAS,6BAA3E,EAAyGC,IAAzG,CAA+GC,GAAD,IAAS;IACnHL,MAAM,GAAGK,GAAG,CAACC,OAAJ,CAAY,CAAZ,EAAeC,OAAf,CAAuBC,QAAhC;EACH,CAFD,EAEGJ,IAFH,CAESC,GAAD,IAAS;IACbI,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBL,GAAnB;EACH,CAJD,EAH4B,CAQ5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;AACH,CA7BD;AA8BA,eAAejB,MAAf"},"metadata":{},"sourceType":"module"}