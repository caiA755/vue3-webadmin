{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"cai-form\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_col = _resolveComponent(\"el-col\");\n\n  const _component_el_row = _resolveComponent(\"el-row\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_form, {\n    \"label-width\": \"100px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_row, {\n      gutter: 20\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.formItems, item => {\n        return _openBlock(), _createBlock(_component_el_col, {\n          key: item.label,\n          span: 6,\n          xl: 6,\n          lg: 8,\n          md: 12,\n          sm: 24,\n          xs: 24\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: item.label\n          }, {\n            default: _withCtx(() => [item.type == 'input' ? (_openBlock(), _createBlock(_component_el_input, {\n              key: 0,\n              modelValue: _ctx.formData[item.field],\n              \"onUpdate:modelValue\": $event => _ctx.formData[item.field] = $event,\n              placeholder: item.placeholder\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\", \"placeholder\"])) : item.type == 'select' ? (_openBlock(), _createBlock(_component_el_select, {\n              key: 1,\n              placeholder: item.placeholder\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.options, opt => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  value: opt.value,\n                  key: opt.value\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(opt.title), 1\n                  /* TEXT */\n                  )]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1032\n                /* PROPS, DYNAMIC_SLOTS */\n                , [\"value\"]);\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"placeholder\"])) : item.type == 'datepicker' ? (_openBlock(), _createElementBlock(_Fragment, {\n              key: 2\n            }, [_createCommentVNode(\" <el-date-picker  item.otherOptions  ></el-date-picker> \"), _createCommentVNode(\" <el-date-picker  @calendar-change=\\\"change($event)\\\"  ></el-date-picker> \"), _createCommentVNode(\" <div class=\\\"block\\\"> \"), _createCommentVNode(\" <span class=\\\"demonstration\\\">Start date time 12:00:00</span> \"), _createVNode(_component_el_date_picker, {\n              type: \"datetimerange\",\n              \"start-placeholder\": \"开始日期\",\n              \"end-placeholder\": \"结束日期\"\n            }), _createCommentVNode(\" </div> \")], 64\n            /* STABLE_FRAGMENT */\n            )) : _createCommentVNode(\"v-if\", true)]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1032\n          /* PROPS, DYNAMIC_SLOTS */\n          , [\"label\"])]),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1024\n        /* DYNAMIC_SLOTS */\n        );\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  })]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;;;;;;;;;;;;;;;;;uBAAXC,oBAkCM,KAlCN,cAkCM,CAjCHC,aAgCUC,kBAhCV,EAgCU;IAhCD,eAAY;EAgCX,CAhCV,EAA4B;sBACzB,MA8BS,CA9BTD,aA8BSE,iBA9BT,EA8BS;MA9BAC,MAAM,EAAE;IA8BR,CA9BT,EAAmB;wBACL,MAAyB,oBAAnCJ,oBA4BWK,SA5BX,EA4BW,IA5BX,EA4BWC,YA5BcC,gBA4Bd,EA5BMC,IAAiB,IAAb;6BACjBC,aA0BSC,iBA1BT,EA0BS;eA3B6BF,IAAI,CAACG,KA2BlC;UA1BCC,IAAI,EAAE,CA0BP;UA1BWC,EAAE,EAAE,CA0Bf;UA1BmBC,EAAE,EAAE,CA0BvB;UA1B2BC,EAAE,EAAE,EA0B/B;UA1BoCC,EAAE,EAAE,EA0BxC;UA1B6CC,EAAE,EAAE;QA0BjD,CA1BT;4BACI,MAwBe,CAxBfhB,aAwBeiB,uBAxBf,EAwBe;YAxBAP,KAAK,EAAEH,IAAI,CAACG;UAwBZ,CAxBf;8BACI,MAEW,CAFKH,IAAI,CAACW,IAAL,IAAS,yBACtBV,aAA0EW,mBAA1E,EAA0E;oBAAA;0BAAvDC,cAASb,IAAI,CAACc,KAAd,CAAuD;+CAAvDD,cAASb,IAAI,CAACc,KAAd,IAAmBC,MAAoC;cAAhCC,WAAW,EAAEhB,IAAI,CAACgB;YAAc,CAA1E;;YAAA,2DAEkBhB,IAAI,CAACW,IAAL,IAAS,0BAC3BV,aAIYgB,oBAJZ,EAIY;oBAAA;cAJAD,WAAW,EAAEhB,IAAI,CAACgB;YAIlB,CAJZ;gCACc,MAA2B,oBAAtCxB,oBAEYK,SAFZ,EAEY,IAFZ,EAEYC,YAFaE,IAAI,CAACkB,OAElB,EAFMC,GAAmB,IAAhB;qCAArBlB,aAEYmB,oBAFZ,EAEY;kBAF4BC,KAAK,EAAEF,GAAG,CAACE,KAEvC;kBAF+CC,GAAG,EAAEH,GAAG,CAACE;gBAExD,CAFZ;oCACM,MAAa,mCAAXF,GAAG,CAACI,QAAK;kBAAA;mBAAE;;;;iBADnB;;gBAAA;eAEY,CAFZ;;cAAA,CAAsC;;;;aADzC;;YAAA,sBAMkBvB,IAAI,CAACW,IAAL,IAAS,8BAA9BnB,oBAYgBK,SAZhB,EAYgB;cAAAyB;YAAA,CAZhB,EAYgB,CAXTE,+EAWS,EAVRA,iGAUQ,EATRA,8CASQ,EARRA,sFAQQ,EAPR/B,aAIEgC,yBAJF,EAIE;cAHFd,IAAI,EAAC,eAGH;cAFF,qBAAkB,MAEhB;cADF,mBAAgB;YACd,CAJF,CAOQ,EADZa,+BACY,CAZhB;;YAAA,sCARW;;;;WAHf;;UAAA,YAwBe;;;;SAzBnB;;QAAA;OA2BO,CA5BX;;MAAA,CAAmC,GADpB;;;;IAAA,CAAnB,CA8BS,EA/BgB;;;;EAAA,CAA5B,CAiCG,CAlCN","names":["class","_createElementBlock","_createVNode","_component_el_form","_component_el_row","gutter","_Fragment","_renderList","$props","item","_createBlock","_component_el_col","label","span","xl","lg","md","sm","xs","_component_el_form_item","type","_component_el_input","_ctx","field","$event","placeholder","_component_el_select","options","opt","_component_el_option","value","key","title","_createCommentVNode","_component_el_date_picker"],"sourceRoot":"","sources":["E:\\CaiCai\\前端学习\\Vue学习\\job-web-vue3\\src\\base-ui\\src\\form.vue"],"sourcesContent":["<template>\r\n  <div class=\"cai-form\">\r\n     <el-form label-width=\"100px\">\r\n        <el-row :gutter=\"20\">\r\n            <template v-for=\"item in formItems\" :key=\"item.label\">\r\n                <el-col  :span=\"6\" :xl=\"6\" :lg=\"8\" :md=\"12\" :sm=\"24\" :xs=\"24\">\r\n                    <el-form-item :label=\"item.label\">\r\n                        <template v-if=\"item.type=='input'\">\r\n                           <el-input v-model=\"formData[item.field]\" :placeholder=\"item.placeholder\"/>\r\n                        </template>\r\n                        <template v-else-if=\"item.type=='select'\">\r\n                           <el-select :placeholder=\"item.placeholder\">\r\n                              <el-option v-for=\"opt in item.options\" :value=\"opt.value\" :key=\"opt.value\">\r\n                                    {{opt.title}}\r\n                              </el-option>\r\n                           </el-select>\r\n                        </template>\r\n                        <template v-else-if=\"item.type=='datepicker'\">\r\n                               <!-- <el-date-picker  item.otherOptions  ></el-date-picker> -->\r\n                                <!-- <el-date-picker  @calendar-change=\"change($event)\"  ></el-date-picker> -->\r\n                                <!-- <div class=\"block\"> -->\r\n                                <!-- <span class=\"demonstration\">Start date time 12:00:00</span> -->\r\n                                <el-date-picker  \r\n                                type=\"datetimerange\"\r\n                                start-placeholder=\"开始日期\"\r\n                                end-placeholder=\"结束日期\"\r\n                                />\r\n                             \r\n                            <!-- </div> -->\r\n                             </template>\r\n                    </el-form-item>\r\n                </el-col>\r\n            </template>\r\n        </el-row>\r\n     </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {reactive,ref,watch} from 'vue'\r\nexport default {\r\n  props:{\r\n      formItems:{\r\n        type:Array,\r\n        default:()=>{\r\n           //数据和对象类型 写默认值要用箭头函数\r\n      },\r\n      modelValue:{\r\n        type:Object,\r\n        default:()=>{\r\n           //数据和对象类型 写默认值要用箭头函数\r\n        },\r\n      }\r\n    },\r\n    emits:[\"update:modelValue\"],\r\n    setup(props,{emit}){\r\n      // const changea = (e) => {\r\n      //   this.$forceUpdate();\r\n      // };\r\n      const formData=ref({...props.modelValue})\r\n      watch(formData,(newValue)=>{\r\n        emit('update:modelValue',newValue);\r\n      },{\r\n        deep:true\r\n      });\r\n      // return {changea}\r\n    }\r\n  }\r\n    // colLayout:{\r\n    //     type:Object,\r\n    //     default:()=>({\r\n    //         xl: 6,  //1920px 4个\r\n    //         lg: {span: 8, offset: 0},\r\n    //         md:{span: 12, offset: 0},\r\n    //         sm:{span: 24, offset: 0},\r\n    //         xs:{span: 24, offset: 0},\r\n    //     })\r\n    // },\r\n    // formStyle:{\r\n    //     type:String,\r\n    //     default:()=>({\r\n    //         padding:'10px'\r\n    //     })\r\n    // }\r\n  // },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}