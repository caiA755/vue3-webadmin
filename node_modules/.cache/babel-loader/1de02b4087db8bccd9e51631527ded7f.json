{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport cRequest1 from '@/service/index.js';\nimport localCache from '../../../utils/cache.js';\nimport mainurl from '@/service/url/mainurl';\nimport router from '@/router/index.js';\nimport { ElLoading } from 'element-plus'; // import { el } from 'element-plus/es/locale';\n// import {useStore} from 'vuex'\n\nexport default {\n  data() {\n    let checkLen = (rule, value, callback) => {\n      if (value.length < 6 || value.length > 14) {\n        return callback(new Error('长度须在6-14之间'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      account: {\n        username: localCache.getCache('username') ?? '',\n        password: localCache.getCache('password') ?? '',\n        isRemberPwd: true\n      },\n      rules: {\n        // 需要和v-model里面的字段名一致\n        username: [{\n          pattern: /^[\\x7f-\\xffA-Za-z0-9_]+$/,\n          message: \"不允许中文\",\n          trigger: \"blur\"\n        }, {\n          required: true,\n          message: '用户名不能为空',\n          trigger: 'blur'\n        }, {\n          validator: checkLen,\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '密码不能为空',\n          trigger: 'blur'\n        }, {\n          validator: checkLen,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    submitForm() {\n      // console.log(this.$refs);\n      this.$refs.ruleFormRef.validate(async valid => {\n        if (valid) {\n          //账号是否存储\n          if (this.account.isRemberPwd) {\n            localCache.setCache(\"username\", this.account.username);\n            localCache.setCache(\"password\", this.account.password);\n          } else {\n            localCache.deleteCache(\"username\");\n            localCache.deleteCache(\"password\");\n          } //用户登录  Bmob上面的数据 无token （用userid暂替 localstorage添加字段设置过期时间）\n\n\n          let flag;\n          await cRequest1.getRequest(mainurl.userurl, `{\"username\":\"${this.account.username}\",\"password\":\"${this.account.password}\"}&groupcount=true&sum=username`).then(res => {\n            flag = res;\n          });\n          console.log(flag.results.length);\n\n          if (flag.results.length) {\n            //  isShowLoading=false;\n            //设置token\n            let params = {\n              name: 'token',\n              value: this.account.username\n            };\n            var datas = Object.assign(params, {\n              startTime: new Date().getTime()\n            });\n            localCache.setCache(\"token\", JSON.stringify(datas)); //登录之后请求用户信息 (根据username 把username存储到localstorage) \n\n            let userinfo;\n            await cRequest1.getRequest(mainurl.userurl, `{\"username\":\"${this.account.username}\"}&keys=username,status,objectId,email,mobile)`).then(res => {\n              userinfo = res;\n            });\n            localCache.setCache(\"userinfo\", userinfo); // console.log(userinfo);\n            //let objectId=userinfo.objectId;\n            //查询roleid 根据username(唯一约束)\n\n            let roleid;\n            await cRequest1.getRequest(mainurl.userroleUrl, `{\"user_id\":\"${this.account.username}\"}&include=tb_user.username`).then(res => {\n              roleid = res.results[0].role_id.objectId;\n            });\n            console.log(roleid); //查询菜单 查询roleid 根据roleid显示不同的菜单\n\n            let menu_array = [];\n            let result;\n            await cRequest1.getRequest(mainurl.rolemenuUrl, `{\"role_id\":\"${roleid}\"}&include=menu_id`).then(res => {\n              res.results.sort((a, b) => Number(a[\"order_num\"]) - Number(b[\"order_num\"]));\n              result = res.results;\n            }); //将菜单信息进行处理\n            // console.log(result);\n\n            result.forEach(element => {\n              if (element.menu_id.type === 1 || element.menu_id.type === 3) {\n                menu_array.push(element.menu_id);\n              }\n            });\n\n            for (let i = 0; i < menu_array.length; i++) {\n              await cRequest1.getRequest(mainurl.menuUrl, `{\"parent_id\":\"${menu_array[i].objectId}\",\"type\":2}`).then(res => {\n                menu_array[i].children = res.results;\n              });\n            }\n\n            localCache.setCache(\"menuinfo\", menu_array); // console.log(menu_array);\n\n            ElMessage({\n              message: '登录成功',\n              type: 'success',\n              duration: 1000\n            }); //跳到首页\n\n            setTimeout(() => this.$router.push({\n              path: '/main'\n            }), 1000);\n          } else {\n            ElMessage({\n              message: '登录失败, 账号或密码错误！',\n              type: 'error',\n              duration: 1000\n            });\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    }\n\n  },\n\n  setup() {}\n\n};","map":{"version":3,"mappings":"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","names":["cRequest1","localCache","mainurl","router","ElLoading","data","checkLen","rule","value","callback","length","Error","account","username","getCache","password","isRemberPwd","rules","pattern","message","trigger","required","validator","methods","submitForm","$refs","ruleFormRef","validate","valid","setCache","deleteCache","flag","getRequest","userurl","then","res","console","log","results","params","name","datas","Object","assign","startTime","Date","getTime","JSON","stringify","userinfo","roleid","userroleUrl","role_id","objectId","menu_array","result","rolemenuUrl","sort","a","b","Number","forEach","element","menu_id","type","push","i","menuUrl","children","ElMessage","duration","setTimeout","$router","path","setup"],"sourceRoot":"","sources":["E:\\CaiCai\\前端学习\\Vue学习\\job-web-vue3\\src\\views\\login\\cpns\\login-cpns.vue"],"sourcesContent":["<template>\r\n  <div id=\"login\">\r\n     <el-form ref=\"ruleFormRef\" :model=\"account\"  status-icon :rules=\"rules\" label-width=\"120px\" class=\"demo-ruleForm\">\r\n      <el-form-item label=\"用户名\"  prop=\"username\">\r\n        <template v-slot:label>\r\n           <el-icon style=\"padding-top:10px;\" size=\"20px\"><User /></el-icon>\r\n        </template> \r\n       <el-input size=\"large\" v-model=\"account.username\"   placeholder=\"请输入用户名\" autocomplete=\"off\" />\r\n    </el-form-item>\r\n    <el-form-item label=\"密码\" prop=\"password\">\r\n           <template v-slot:label>\r\n           <el-icon style=\"padding-top:10px;\" size=\"24px\"><Key /></el-icon>\r\n        </template>\r\n      <el-input  size=\"large\" v-model=\"account.password\" type=\"password\" placeholder=\"请输入密码\" autocomplete=\"off\" />\r\n    </el-form-item>\r\n     <el-form-item>\r\n              <el-checkbox v-model=\"account.isRemberPwd\"  label=\"记住密码\" size=\"large\" />\r\n              <el-link style=\"margin-left:210px\"  type=\"primary\">忘记密码？</el-link>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button style=\"width:100%;font-size:16px;font-weight:bold\" size=\"large\" type=\"primary\" @click=\"submitForm(ruleFormRef)\">登录</el-button >\r\n    </el-form-item>\r\n  </el-form>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport cRequest1 from '@/service/index.js';\r\nimport localCache from '../../../utils/cache.js'\r\nimport mainurl from '@/service/url/mainurl'\r\nimport router from '@/router/index.js';\r\nimport {ElLoading} from 'element-plus'\r\n// import { el } from 'element-plus/es/locale';\r\n// import {useStore} from 'vuex'\r\n\r\nexport default {\r\n    data(){ \r\n      let checkLen=(rule,value,callback)=>{\r\n        if(value.length<6||value.length>14){\r\n          return callback(new Error('长度须在6-14之间'));\r\n        }else{\r\n          callback();\r\n        }\r\n      }\r\n     return {\r\n            account:{\r\n                username:localCache.getCache('username')??'',\r\n                password:localCache.getCache('password')??'',\r\n                isRemberPwd:true\r\n             },\r\n            rules:{\r\n              // 需要和v-model里面的字段名一致\r\n              username:[\r\n                  {\r\n                    pattern: /^[\\x7f-\\xffA-Za-z0-9_]+$/,\r\n                    message: \"不允许中文\",\r\n                    trigger: \"blur\",\r\n                    \r\n                  },\r\n                 {\r\n                  required: true,\r\n                  message: '用户名不能为空',\r\n                  trigger: 'blur'\r\n                 },\r\n                 {\r\n                    validator: checkLen,\r\n                    trigger: 'blur' \r\n                 }\r\n              ],\r\n              password:[\r\n                {\r\n                 required: true,\r\n                 message: '密码不能为空',\r\n                 trigger: 'blur'\r\n                },\r\n                 {\r\n                    validator: checkLen,\r\n                    trigger: 'blur' \r\n                 }\r\n              ]\r\n            }\r\n    }\r\n    },\r\n   methods:{\r\n      submitForm(){\r\n        // console.log(this.$refs);\r\n         this.$refs.ruleFormRef.validate(async valid => {\r\n           if (valid) {\r\n            //账号是否存储\r\n            if(this.account.isRemberPwd){\r\n                  localCache.setCache(\"username\",this.account.username);\r\n                  localCache.setCache(\"password\",this.account.password);\r\n            }else{\r\n                  localCache.deleteCache(\"username\");\r\n                  localCache.deleteCache(\"password\");\r\n            }\r\n            //用户登录  Bmob上面的数据 无token （用userid暂替 localstorage添加字段设置过期时间）\r\n            let flag;\r\n            await  cRequest1.getRequest(mainurl.userurl,`{\"username\":\"${this.account.username}\",\"password\":\"${this.account.password}\"}&groupcount=true&sum=username`).then((res)=>{\r\n              flag=res;\r\n            });\r\n            console.log(flag.results.length);\r\n            if(flag.results.length){\r\n            //  isShowLoading=false;\r\n            //设置token\r\n             let params = {name: 'token', value: this.account.username};\r\n             var datas = Object.assign(params, { startTime: new Date().getTime() });\r\n             localCache.setCache(\"token\", JSON.stringify(datas));\r\n             //登录之后请求用户信息 (根据username 把username存储到localstorage) \r\n             let userinfo;\r\n             await cRequest1.getRequest(mainurl.userurl,`{\"username\":\"${this.account.username}\"}&keys=username,status,objectId,email,mobile)`).then((res)=>{\r\n                userinfo=res;\r\n             })\r\n             localCache.setCache(\"userinfo\",userinfo);\r\n             // console.log(userinfo);\r\n             //let objectId=userinfo.objectId;\r\n             //查询roleid 根据username(唯一约束)\r\n             let roleid;\r\n             await cRequest1.getRequest(mainurl.userroleUrl,`{\"user_id\":\"${this.account.username}\"}&include=tb_user.username`).then((res)=>{\r\n                 roleid=res.results[0].role_id.objectId;\r\n             })\r\n             console.log(roleid);\r\n             //查询菜单 查询roleid 根据roleid显示不同的菜单\r\n             let menu_array=[];\r\n             let result;\r\n             await cRequest1.getRequest(mainurl.rolemenuUrl,`{\"role_id\":\"${roleid}\"}&include=menu_id`).then((res)=>{    \r\n                 res.results.sort((a, b) => Number(a[\"order_num\"]) - Number(b[\"order_num\"]));\r\n                 result=res.results;\r\n             })\r\n              //将菜单信息进行处理\r\n              // console.log(result);\r\n              result.forEach((element) => {\r\n                    if(element.menu_id.type===1||element.menu_id.type===3){\r\n                      menu_array.push(element.menu_id);\r\n                    }\r\n               });\r\n         \r\n              for(let i=0;i<menu_array.length;i++){\r\n                   await cRequest1.getRequest(mainurl.menuUrl,`{\"parent_id\":\"${menu_array[i].objectId}\",\"type\":2}`).then((res)=>{\r\n                         menu_array[i].children=res.results;\r\n                   })\r\n              }\r\n              localCache.setCache(\"menuinfo\",menu_array);\r\n              // console.log(menu_array);\r\n              ElMessage({\r\n                  message: '登录成功',\r\n                  type: 'success',\r\n                  duration:1000\r\n               });\r\n              //跳到首页\r\n               setTimeout(()=>this.$router.push({path:'/main'}),1000);\r\n            }else{\r\n              ElMessage({\r\n                  message: '登录失败, 账号或密码错误！',\r\n                  type: 'error',\r\n                  duration:1000\r\n               });\r\n            }\r\n          } else {\r\n            console.log('error submit!!');\r\n            return false;\r\n          }\r\n\r\n        });\r\n      }\r\n   },\r\n   setup(){\r\n     \r\n   }\r\n}\r\n</script>\r\n\r\n<style>\r\n  #login{\r\n    margin-top: 40px;\r\n    margin-left: -100px;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}