{"ast":null,"code":"import axios from 'axios';\nimport qs from 'qs'; //querystring\n\nclass caiRequest {\n  constructor(config) {\n    this.instance = axios.create(config.axios_config);\n    this.Interceptors = config.Interceptors; //axios拦截请求前后\n\n    this.instance.interceptors.request.use(this.Interceptors.requestInterceptor, this.Interceptors.requestInterceptorCatch); //axios拦截响应前后\n\n    this.instance.interceptors.response.use(this.Interceptors.responseInterceptor, this.Interceptors.responseInterceptorCatch);\n  }\n\n  getRequest(url, params) {\n    //this.instance=axios实例\n    this.instance.get(url, params).then(res => {\n      console.log(res);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  postRequest(url, data) {\n    data = {\n      \"requests\": [{\n        \"method\": \"POST\",\n        \"path\": \"/1/classes/_User\",\n        \"body\": {// key1: value1,\n          // key2: value2,\n        }\n      }, {\n        \"method\": \"PUT\",\n        \"token\": \"tokenValue\",\n        //(具有ACL规则时),\n        \"path\": \"/1/classes/_User/objectId\",\n        \"body\": {// key1: value1,\n        }\n      }, {\n        \"method\": \"DELETE\",\n        \"token\": \"tokenValue\",\n        //(具有ACL规则时),\n        \"path\": \"/1/classes/_User/objectId\"\n      }]\n    }; //this.instance=axios实例\n\n    this.instance.post(url, data).then(res => {\n      console.log(res);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n} //axios直接配置请求方法\n\n\nfunction post(url, data) {\n  //  post\n  return axios({\n    method: 'post',\n    baseURL: process.env.BASEURL,\n    url,\n    data: qs.stringify(data),\n    timeout: config.timeout,\n    headers: config.headers // headers: {\n    //     'X-Requested-With': 'XMLHttpRequest',\n    //     'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    // }\n\n  }).then(response => {\n    console.log(response);\n  }).catch(res => {\n    console.log(res);\n  });\n}\n\nfunction get(url, params) {\n  // get\n  return axios({\n    method: 'get',\n    baseURL: process.env.BASEURL,\n    url,\n    params,\n    // get 请求时带的参数\n    timeout: config.timeout,\n    headers: config.headers // headers: {\n    //     'X-Requested-With': 'XMLHttpRequest'\n    // }\n\n  }).then(response => {\n    console.log(response);\n  }).catch(res => {\n    console.log(res);\n  });\n}\n\nexport default caiRequest;","map":{"version":3,"names":["axios","qs","caiRequest","constructor","config","instance","create","axios_config","Interceptors","interceptors","request","use","requestInterceptor","requestInterceptorCatch","response","responseInterceptor","responseInterceptorCatch","getRequest","url","params","get","then","res","console","log","catch","error","postRequest","data","post","method","baseURL","process","env","BASEURL","stringify","timeout","headers"],"sources":["E:/CaiCai/前端学习/Vue学习/job-web-vue3/src/service/request/caiRequest.js"],"sourcesContent":["import axios from 'axios'\r\nimport qs from 'qs' //querystring\r\n\r\nclass caiRequest {\r\n    constructor(config) {\r\n        this.instance = axios.create(config.axios_config);\r\n        this.Interceptors = config.Interceptors;\r\n        //axios拦截请求前后\r\n        this.instance.interceptors.request.use(\r\n            this.Interceptors.requestInterceptor,\r\n            this.Interceptors.requestInterceptorCatch\r\n        );\r\n        //axios拦截响应前后\r\n        this.instance.interceptors.response.use(\r\n            this.Interceptors.responseInterceptor,\r\n            this.Interceptors.responseInterceptorCatch\r\n        );\r\n    }\r\n    getRequest(url, params) {\r\n        //this.instance=axios实例\r\n        this.instance.get(url, params).then((res) => {\r\n            console.log(res);\r\n        }).catch(function(error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n    postRequest(url, data) {\r\n        data = {\r\n                \"requests\": [{\r\n                        \"method\": \"POST\",\r\n                        \"path\": \"/1/classes/_User\",\r\n                        \"body\": {\r\n                            // key1: value1,\r\n                            // key2: value2,\r\n                        }\r\n                    },\r\n                    {\r\n                        \"method\": \"PUT\",\r\n                        \"token\": \"tokenValue\", //(具有ACL规则时),\r\n                        \"path\": \"/1/classes/_User/objectId\",\r\n                        \"body\": {\r\n                            // key1: value1,\r\n                        }\r\n                    },\r\n                    {\r\n                        \"method\": \"DELETE\",\r\n                        \"token\": \"tokenValue\", //(具有ACL规则时),\r\n                        \"path\": \"/1/classes/_User/objectId\"\r\n                    },\r\n                ]\r\n            }\r\n            //this.instance=axios实例\r\n        this.instance.post(url, data).then((res) => {\r\n            console.log(res);\r\n        }).catch(function(error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\n//axios直接配置请求方法\r\nfunction post(url, data) { //  post\r\n    return axios({\r\n        method: 'post',\r\n        baseURL: process.env.BASEURL,\r\n        url,\r\n        data: qs.stringify(data),\r\n        timeout: config.timeout,\r\n        headers: config.headers\r\n            // headers: {\r\n            //     'X-Requested-With': 'XMLHttpRequest',\r\n            //     'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n            // }\r\n    }).then((response) => {\r\n        console.log(response);\r\n    }).catch((res) => {\r\n        console.log(res);\r\n    })\r\n}\r\n\r\nfunction get(url, params) { // get\r\n    return axios({\r\n        method: 'get',\r\n        baseURL: process.env.BASEURL,\r\n        url,\r\n        params, // get 请求时带的参数\r\n        timeout: config.timeout,\r\n        headers: config.headers\r\n            // headers: {\r\n            //     'X-Requested-With': 'XMLHttpRequest'\r\n            // }\r\n    }).then((response) => {\r\n        console.log(response);\r\n    }).catch((res) => {\r\n        console.log(res);\r\n    })\r\n}\r\n\r\nexport default caiRequest;"],"mappings":"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"},"metadata":{},"sourceType":"module"}