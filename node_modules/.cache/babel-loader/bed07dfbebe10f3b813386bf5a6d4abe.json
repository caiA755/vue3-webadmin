{"ast":null,"code":"import axios from 'axios';\nimport { Promise } from 'core-js';\nimport qs from 'qs';\nimport { ElLoading } from \"element-plus\";\nconst config = {\n  headers: {\n    'X-Bmob-Application-Id': 'e536863a0210f9b43a1e5344b785de3d',\n    'X-Bmob-REST-API-Key': '37b324a62cedd302e6a22fc84e622a5a',\n    'Content-Type': 'application/json'\n  },\n  baseURL: \"https://api2.bmob.cn\",\n  timeout: 5000\n}; //全局配置\n\naxios.defaults.baseURL = config.baseURL;\naxios.defaults.headers = config.headers; //axios实例\n// axios.get('/1/classes/_User').then((res) => {\n//     console.log(res);\n// });\n\nfunction statusCode(response) {\n  switch (response.status) {\n    case 401:\n      Message.error({\n        message: '未授权，请登录',\n        onClose: function () {\n          router.push({\n            name: 'error-404'\n          });\n        }\n      });\n      break;\n\n    case 403:\n      Message.error({\n        message: '拒绝访问',\n        onClose: function () {\n          router.push({\n            name: 'error-403'\n          });\n        }\n      });\n      break;\n\n    case 404:\n      Message.error({\n        message: '请求地址出错',\n        onClose: function () {\n          router.push({\n            name: 'error-404'\n          });\n        }\n      });\n      break;\n\n    case 408:\n      Message.error({\n        message: '请求超时',\n        onClose: function () {\n          router.push({\n            name: 'error-404'\n          });\n        }\n      });\n      break;\n\n    case 500:\n      Message.error({\n        message: '服务器内部错误',\n        onClose: function () {\n          router.push({\n            name: 'error-500'\n          });\n        }\n      });\n      break;\n\n    default:\n      return response;\n  }\n} //添加拦截请求器\n\n\nlet loadingInstance = null;\naxios.interceptors.request.use(function (config) {\n  //在发送请求之前做些什么\n  loadingInstance = ElLoading.service({\n    fullscreen: true,\n    text: \"你好\"\n  });\n  return config;\n}, function (error) {\n  //对请求错误做些什么\n  return Promise.reject(error);\n}); // 声明响应拦截器\n\naxios.interceptors.response.use(response => {\n  // 响应前\n  // 隐藏 Loading 效果\n  loadingInstance.close();\n  return response;\n}, function (response) {//  响应后\n});\nexport default {\n  post(url, data) {\n    //  post\n    return axios({\n      method: 'post',\n      baseURL: process.env.BASEURL,\n      url,\n      data: qs.stringify(data),\n      timeout: config.timeout,\n      headers: config.headers // headers: {\n      //     'X-Requested-With': 'XMLHttpRequest',\n      //     'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      // }\n\n    }).then(response => {\n      console.log(response);\n    }).catch(res => {\n      console.log(res);\n    });\n  },\n\n  get(url, params) {\n    // get\n    return axios({\n      method: 'get',\n      baseURL: process.env.BASEURL,\n      url,\n      params,\n      // get 请求时带的参数\n      timeout: config.timeout,\n      headers: config.headers // headers: {\n      //     'X-Requested-With': 'XMLHttpRequest'\n      // }\n\n    }).then(response => {\n      console.log(response);\n    }).catch(res => {\n      console.log(res);\n    });\n  }\n\n};","map":{"version":3,"names":["axios","Promise","qs","ElLoading","config","headers","baseURL","timeout","defaults","statusCode","response","status","Message","error","message","onClose","router","push","name","loadingInstance","interceptors","request","use","service","fullscreen","text","reject","close","post","url","data","method","process","env","BASEURL","stringify","then","console","log","catch","res","get","params"],"sources":["E:/CaiCai/前端学习/Vue学习/job-web-vue3/src/service/axios_config.js"],"sourcesContent":["import axios from 'axios'\r\nimport { Promise } from 'core-js';\r\nimport qs from 'qs'\r\nimport { ElLoading } from \"element-plus\";\r\n\r\nconst config = {\r\n    headers: {\r\n        'X-Bmob-Application-Id': 'e536863a0210f9b43a1e5344b785de3d',\r\n        'X-Bmob-REST-API-Key': '37b324a62cedd302e6a22fc84e622a5a',\r\n        'Content-Type': 'application/json'\r\n    },\r\n    baseURL: \"https://api2.bmob.cn\",\r\n    timeout: 5000,\r\n};\r\n//全局配置\r\naxios.defaults.baseURL = config.baseURL;\r\naxios.defaults.headers = config.headers;\r\n\r\n//axios实例\r\n// axios.get('/1/classes/_User').then((res) => {\r\n//     console.log(res);\r\n// });\r\n\r\nfunction statusCode(response) {\r\n    switch (response.status) {\r\n        case 401:\r\n            Message.error({\r\n                message: '未授权，请登录',\r\n                onClose: function() {\r\n                    router.push({ name: 'error-404' });\r\n                }\r\n            })\r\n            break\r\n        case 403:\r\n            Message.error({\r\n                message: '拒绝访问',\r\n                onClose: function() {\r\n                    router.push({ name: 'error-403' });\r\n                }\r\n            })\r\n            break\r\n        case 404:\r\n            Message.error({\r\n                message: '请求地址出错',\r\n                onClose: function() {\r\n                    router.push({ name: 'error-404' });\r\n                }\r\n            })\r\n            break\r\n        case 408:\r\n            Message.error({\r\n                message: '请求超时',\r\n                onClose: function() {\r\n                    router.push({ name: 'error-404' });\r\n                }\r\n            })\r\n            break\r\n        case 500:\r\n            Message.error({\r\n                message: '服务器内部错误',\r\n                onClose: function() {\r\n                    router.push({ name: 'error-500' });\r\n                }\r\n            })\r\n            break\r\n        default:\r\n            return response\r\n    }\r\n}\r\n\r\n//添加拦截请求器\r\nlet loadingInstance = null\r\naxios.interceptors.request.use(function(config) {\r\n    //在发送请求之前做些什么\r\n    loadingInstance = ElLoading.service({ fullscreen: true, text: \"你好\" });\r\n    return config;\r\n}, function(error) {\r\n    //对请求错误做些什么\r\n    return Promise.reject(error);\r\n});\r\n// 声明响应拦截器\r\naxios.interceptors.response.use((response) => {\r\n    // 响应前\r\n    // 隐藏 Loading 效果\r\n    loadingInstance.close();\r\n    return response;\r\n}, function(response) {\r\n    //  响应后\r\n});\r\n\r\nexport default {\r\n    post(url, data) { //  post\r\n        return axios({\r\n            method: 'post',\r\n            baseURL: process.env.BASEURL,\r\n            url,\r\n            data: qs.stringify(data),\r\n            timeout: config.timeout,\r\n            headers: config.headers\r\n                // headers: {\r\n                //     'X-Requested-With': 'XMLHttpRequest',\r\n                //     'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n                // }\r\n        }).then((response) => {\r\n            console.log(response);\r\n        }).catch((res) => {\r\n            console.log(res);\r\n        })\r\n    },\r\n    get(url, params) { // get\r\n        return axios({\r\n            method: 'get',\r\n            baseURL: process.env.BASEURL,\r\n            url,\r\n            params, // get 请求时带的参数\r\n            timeout: config.timeout,\r\n            headers: config.headers\r\n                // headers: {\r\n                //     'X-Requested-With': 'XMLHttpRequest'\r\n                // }\r\n        }).then((response) => {\r\n            console.log(response);\r\n        }).catch((res) => {\r\n            console.log(res);\r\n        })\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}