{"ast":null,"code":"import axios from 'axios';\nimport { Promise } from 'core-js'; // import { Loading } from \"element-ui\";\n\nconst config = {\n  headers: {\n    'X-Bmob-Application-Id': 'e536863a0210f9b43a1e5344b785de3d',\n    'X-Bmob-REST-API-Key': '37b324a62cedd302e6a22fc84e622a5a',\n    'Content-Type': 'application/json'\n  },\n  baseURL: \"https://api2.bmob.cn\",\n  timeout: 100\n}; //全局配置\n\naxios.defaults.baseURL = config.baseURL;\naxios.defaults.headers = config.headers; //axios实例\n\naxios.get('/1/classes/_User').then(res => {\n  console.log(res);\n}); //添加拦截请求器\n\nlet loadingInstance = null;\naxios.interceptors.request.use(function (config) {\n  //在发送请求之前做些什么\n  loadingInstance = Loading.service({\n    fullscreen: true\n  });\n  return config;\n}, function (error) {\n  //对请求错误做些什么\n  return Promise.reject(error);\n}); // 声明响应拦截器\n\naxios.interceptors.response.use(response => {\n  // 隐藏 Loading 效果\n  loadingInstance.close();\n  return response;\n});","map":{"version":3,"names":["axios","Promise","config","headers","baseURL","timeout","defaults","get","then","res","console","log","loadingInstance","interceptors","request","use","Loading","service","fullscreen","error","reject","response","close"],"sources":["E:/CaiCai/前端学习/Vue学习/job-web-vue3/src/service/axios_demo.js"],"sourcesContent":["import axios from 'axios'\r\nimport { Promise } from 'core-js';\r\n// import { Loading } from \"element-ui\";\r\n\r\nconst config = {\r\n    headers: {\r\n        'X-Bmob-Application-Id': 'e536863a0210f9b43a1e5344b785de3d',\r\n        'X-Bmob-REST-API-Key': '37b324a62cedd302e6a22fc84e622a5a',\r\n        'Content-Type': 'application/json'\r\n    },\r\n    baseURL: \"https://api2.bmob.cn\",\r\n    timeout: 100,\r\n};\r\n//全局配置\r\naxios.defaults.baseURL = config.baseURL;\r\naxios.defaults.headers = config.headers;\r\n//axios实例\r\naxios.get('/1/classes/_User').then((res) => {\r\n    console.log(res);\r\n});\r\n\r\n//添加拦截请求器\r\nlet loadingInstance = null\r\naxios.interceptors.request.use(function(config) {\r\n    //在发送请求之前做些什么\r\n    loadingInstance = Loading.service({ fullscreen: true })\r\n    return config;\r\n}, function(error) {\r\n    //对请求错误做些什么\r\n    return Promise.reject(error);\r\n});\r\n// 声明响应拦截器\r\naxios.interceptors.response.use((response) => {\r\n    // 隐藏 Loading 效果\r\n    loadingInstance.close()\r\n    return response\r\n})"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB,C,CACA;;AAEA,MAAMC,MAAM,GAAG;EACXC,OAAO,EAAE;IACL,yBAAyB,kCADpB;IAEL,uBAAuB,kCAFlB;IAGL,gBAAgB;EAHX,CADE;EAMXC,OAAO,EAAE,sBANE;EAOXC,OAAO,EAAE;AAPE,CAAf,C,CASA;;AACAL,KAAK,CAACM,QAAN,CAAeF,OAAf,GAAyBF,MAAM,CAACE,OAAhC;AACAJ,KAAK,CAACM,QAAN,CAAeH,OAAf,GAAyBD,MAAM,CAACC,OAAhC,C,CACA;;AACAH,KAAK,CAACO,GAAN,CAAU,kBAAV,EAA8BC,IAA9B,CAAoCC,GAAD,IAAS;EACxCC,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,CAFD,E,CAIA;;AACA,IAAIG,eAAe,GAAG,IAAtB;AACAZ,KAAK,CAACa,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAASb,MAAT,EAAiB;EAC5C;EACAU,eAAe,GAAGI,OAAO,CAACC,OAAR,CAAgB;IAAEC,UAAU,EAAE;EAAd,CAAhB,CAAlB;EACA,OAAOhB,MAAP;AACH,CAJD,EAIG,UAASiB,KAAT,EAAgB;EACf;EACA,OAAOlB,OAAO,CAACmB,MAAR,CAAeD,KAAf,CAAP;AACH,CAPD,E,CAQA;;AACAnB,KAAK,CAACa,YAAN,CAAmBQ,QAAnB,CAA4BN,GAA5B,CAAiCM,QAAD,IAAc;EAC1C;EACAT,eAAe,CAACU,KAAhB;EACA,OAAOD,QAAP;AACH,CAJD"},"metadata":{},"sourceType":"module"}