{"ast":null,"code":"// service统一出口\nimport caiRequest from \"./request/caiRequest\";\nimport { ElLoading, ElMessage } from \"element-plus\";\nconst axios_config = {\n  headers: {\n    'X-Bmob-Application-Id': 'e536863a0210f9b43a1e5344b785de3d',\n    'X-Bmob-REST-API-Key': '37b324a62cedd302e6a22fc84e622a5a',\n    'Content-Type': 'application/json'\n  },\n  // baseURL: process.env.BASEURL,\n  baseURL: process.env.VUE_APP_BASE_API,\n  timeout: 5000,\n  \"Access-Control-Allow-Origin\": \"*\"\n};\nlet loadingInstance = null,\n    isShowLoading = true;\nlet cRequest1 = new caiRequest({\n  axios_config,\n  isShowLoading,\n  Interceptors: {\n    requestInterceptor: config => {\n      console.log('请求成功的拦截'); // console.log(isShowLoading)\n\n      if (isShowLoading) {\n        loadingInstance = ElLoading.service({\n          fullscreen: true,\n          text: \"正在请求数据...\"\n        });\n      }\n\n      return config;\n    },\n    requestInterceptorCatch: config => {\n      console.log('请求错误的拦截');\n      return Promise.reject(error);\n    },\n    responseInterceptor: response => {\n      console.log('响应成功的拦截'); // console.log(response);\n\n      loadingInstance.close();\n      return response;\n    },\n    responseInterceptorCatch: error => {\n      console.log('响应后的拦截');\n      loadingInstance.close(); //状态码判断\n\n      statusShow(error.response.status, error.message);\n      return error;\n    }\n  }\n});\n\nfunction statusShow(statusCode, msg) {\n  let tip = \"\";\n\n  switch (statusCode) {\n    case 301:\n      tip = \"：请求的网页已永久移动到新位置\";\n      break;\n\n    case 304:\n      tip = \"： 自从上次请求后， 请求的网页未修改过。 服务器返回此响应时， 不会返回网页内容\";\n      break;\n\n    case 400:\n      tip = \"：服务器不理解请求的语法\";\n      break;\n\n    case 403:\n      tip = \"：服务器拒绝请求\";\n      break;\n\n    case 404:\n      tip = \"：服务器找不到请求的网页\";\n      break;\n\n    case 500:\n      tip = \"：服务器遇到错误， 无法完成请求\";\n      break;\n\n    case 501:\n      tip = \"：服务器不具备完成请求的功能\";\n      break;\n\n    case 502:\n      tip = \"：服务器作为网关或代理，从上游服务器收到无效响应\";\n      break;\n\n    default:\n      tip = \"\";\n  }\n\n  ElMessage({\n    message: msg + tip,\n    type: 'error',\n    duration: 5 * 1000\n  });\n}\n\nexport default cRequest1;","map":{"version":3,"names":["caiRequest","ElLoading","ElMessage","axios_config","headers","baseURL","process","env","VUE_APP_BASE_API","timeout","loadingInstance","isShowLoading","cRequest1","Interceptors","requestInterceptor","config","console","log","service","fullscreen","text","requestInterceptorCatch","Promise","reject","error","responseInterceptor","response","close","responseInterceptorCatch","statusShow","status","message","statusCode","msg","tip","type","duration"],"sources":["E:/CaiCai/前端学习/Vue学习/job-web-vue3/src/service/index.js"],"sourcesContent":["// service统一出口\r\nimport caiRequest from \"./request/caiRequest\"\r\nimport { ElLoading, ElMessage } from \"element-plus\";\r\n\r\nconst axios_config = {\r\n    headers: {\r\n        'X-Bmob-Application-Id': 'e536863a0210f9b43a1e5344b785de3d',\r\n        'X-Bmob-REST-API-Key': '37b324a62cedd302e6a22fc84e622a5a',\r\n        'Content-Type': 'application/json',\r\n    },\r\n    // baseURL: process.env.BASEURL,\r\n    baseURL: process.env.VUE_APP_BASE_API,\r\n    timeout: 5000,\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n};\r\nlet loadingInstance = null,\r\n    isShowLoading = true;\r\n\r\nlet cRequest1 = new caiRequest({\r\n    axios_config,\r\n    isShowLoading,\r\n    Interceptors: {\r\n        requestInterceptor: (config) => {\r\n            console.log('请求成功的拦截');\r\n            // console.log(isShowLoading)\r\n            if (isShowLoading) {\r\n                loadingInstance = ElLoading.service({ fullscreen: true, text: \"正在请求数据...\" });\r\n            }\r\n            return config;\r\n        },\r\n        requestInterceptorCatch: (config) => {\r\n            console.log('请求错误的拦截');\r\n            return Promise.reject(error);\r\n        },\r\n        responseInterceptor: (response) => {\r\n            console.log('响应成功的拦截');\r\n            // console.log(response);\r\n            loadingInstance.close();\r\n            return response;\r\n        },\r\n        responseInterceptorCatch: (error) => {\r\n            console.log('响应后的拦截');\r\n            loadingInstance.close();\r\n            //状态码判断\r\n            statusShow(error.response.status, error.message);\r\n            return error;\r\n        }\r\n    }\r\n});\r\n\r\nfunction statusShow(statusCode, msg) {\r\n    let tip = \"\";\r\n    switch (statusCode) {\r\n\r\n        case 301:\r\n            tip = \"：请求的网页已永久移动到新位置\";\r\n            break;\r\n        case 304:\r\n            tip = \"： 自从上次请求后， 请求的网页未修改过。 服务器返回此响应时， 不会返回网页内容\";\r\n            break;\r\n        case 400:\r\n            tip = \"：服务器不理解请求的语法\";\r\n            break;\r\n        case 403:\r\n            tip = \"：服务器拒绝请求\";\r\n            break;\r\n        case 404:\r\n            tip = \"：服务器找不到请求的网页\";\r\n            break;\r\n        case 500:\r\n            tip = \"：服务器遇到错误， 无法完成请求\";\r\n            break;\r\n        case 501:\r\n            tip = \"：服务器不具备完成请求的功能\";\r\n            break;\r\n        case 502:\r\n            tip = \"：服务器作为网关或代理，从上游服务器收到无效响应\";\r\n            break;\r\n        default:\r\n            tip = \"\";\r\n    }\r\n    ElMessage({\r\n        message: msg + tip,\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n    })\r\n}\r\n\r\nexport default cRequest1;"],"mappings":"AAAA;AACA,OAAOA,UAAP,MAAuB,sBAAvB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,cAArC;AAEA,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE;IACL,yBAAyB,kCADpB;IAEL,uBAAuB,kCAFlB;IAGL,gBAAgB;EAHX,CADQ;EAMjB;EACAC,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBAPJ;EAQjBC,OAAO,EAAE,IARQ;EASjB,+BAA+B;AATd,CAArB;AAWA,IAAIC,eAAe,GAAG,IAAtB;AAAA,IACIC,aAAa,GAAG,IADpB;AAGA,IAAIC,SAAS,GAAG,IAAIZ,UAAJ,CAAe;EAC3BG,YAD2B;EAE3BQ,aAF2B;EAG3BE,YAAY,EAAE;IACVC,kBAAkB,EAAGC,MAAD,IAAY;MAC5BC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAD4B,CAE5B;;MACA,IAAIN,aAAJ,EAAmB;QACfD,eAAe,GAAGT,SAAS,CAACiB,OAAV,CAAkB;UAAEC,UAAU,EAAE,IAAd;UAAoBC,IAAI,EAAE;QAA1B,CAAlB,CAAlB;MACH;;MACD,OAAOL,MAAP;IACH,CARS;IASVM,uBAAuB,EAAGN,MAAD,IAAY;MACjCC,OAAO,CAACC,GAAR,CAAY,SAAZ;MACA,OAAOK,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAP;IACH,CAZS;IAaVC,mBAAmB,EAAGC,QAAD,IAAc;MAC/BV,OAAO,CAACC,GAAR,CAAY,SAAZ,EAD+B,CAE/B;;MACAP,eAAe,CAACiB,KAAhB;MACA,OAAOD,QAAP;IACH,CAlBS;IAmBVE,wBAAwB,EAAGJ,KAAD,IAAW;MACjCR,OAAO,CAACC,GAAR,CAAY,QAAZ;MACAP,eAAe,CAACiB,KAAhB,GAFiC,CAGjC;;MACAE,UAAU,CAACL,KAAK,CAACE,QAAN,CAAeI,MAAhB,EAAwBN,KAAK,CAACO,OAA9B,CAAV;MACA,OAAOP,KAAP;IACH;EAzBS;AAHa,CAAf,CAAhB;;AAgCA,SAASK,UAAT,CAAoBG,UAApB,EAAgCC,GAAhC,EAAqC;EACjC,IAAIC,GAAG,GAAG,EAAV;;EACA,QAAQF,UAAR;IAEI,KAAK,GAAL;MACIE,GAAG,GAAG,iBAAN;MACA;;IACJ,KAAK,GAAL;MACIA,GAAG,GAAG,2CAAN;MACA;;IACJ,KAAK,GAAL;MACIA,GAAG,GAAG,cAAN;MACA;;IACJ,KAAK,GAAL;MACIA,GAAG,GAAG,UAAN;MACA;;IACJ,KAAK,GAAL;MACIA,GAAG,GAAG,cAAN;MACA;;IACJ,KAAK,GAAL;MACIA,GAAG,GAAG,kBAAN;MACA;;IACJ,KAAK,GAAL;MACIA,GAAG,GAAG,gBAAN;MACA;;IACJ,KAAK,GAAL;MACIA,GAAG,GAAG,0BAAN;MACA;;IACJ;MACIA,GAAG,GAAG,EAAN;EA3BR;;EA6BAhC,SAAS,CAAC;IACN6B,OAAO,EAAEE,GAAG,GAAGC,GADT;IAENC,IAAI,EAAE,OAFA;IAGNC,QAAQ,EAAE,IAAI;EAHR,CAAD,CAAT;AAKH;;AAED,eAAexB,SAAf"},"metadata":{},"sourceType":"module"}