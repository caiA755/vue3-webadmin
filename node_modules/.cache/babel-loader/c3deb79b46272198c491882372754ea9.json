{"ast":null,"code":"import axios from 'axios';\nimport qs from 'qs'; //querystring\n\nclass caiRequest {\n  constructor(config) {\n    this.instance = axios.create(config.axios_config);\n    this.Interceptors = config.Interceptors; //axios拦截请求前后\n\n    this.instance.interceptors.request.use(this.Interceptors.requestInterceptor, this.Interceptors.requestInterceptorCatch); //axios拦截响应前后\n\n    this.instance.interceptors.response.use(this.Interceptors.responseInterceptor, this.Interceptors.responseInterceptorCatch);\n  }\n\n  getRequest(url, params, config) {\n    //单独拦截\n    if (config != null) {\n      config = config.Interceptors.requestInterceptor(config);\n    } //this.instance=axios实例\n\n\n    let where;\n\n    if (params != null) {\n      //bomb云数据库 请求方式\n      // where = '?where=' + JSON.stringify(params);\n      where = '?where=' + params;\n      url = url + where;\n    }\n\n    console.log(url);\n    return this.instance.get(url).then(res => {\n      return res.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  postRequest(url, data, res) {\n    //单独拦截\n    if (res != null) {\n      res = res.Interceptors.responseInterceptor(res);\n    } //this.instance=axios实例\n\n\n    this.instance.post(url, data).then(res => {\n      console.log(res);\n      return Promise.resolve(res.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n} //axios直接配置请求方法\n\n\nfunction post(url, data) {\n  //  post\n  return axios({\n    method: 'post',\n    baseURL: process.env.BASEURL,\n    url,\n    data: qs.stringify(data),\n    timeout: config.timeout,\n    headers: config.headers // headers: {\n    //     'X-Requested-With': 'XMLHttpRequest',\n    //     'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    // }\n\n  }).then(response => {\n    console.log(response);\n  }).catch(res => {\n    console.log(res);\n  });\n}\n\nfunction get(url, params) {\n  // get\n  return axios({\n    method: 'get',\n    baseURL: process.env.BASEURL,\n    url,\n    params,\n    // get 请求时带的参数\n    timeout: config.timeout,\n    headers: config.headers // headers: {\n    //     'X-Requested-With': 'XMLHttpRequest'\n    // }\n\n  }).then(response => {\n    console.log(response);\n  }).catch(res => {\n    console.log(res);\n  });\n}\n\nexport default caiRequest;","map":null,"metadata":{},"sourceType":"module"}