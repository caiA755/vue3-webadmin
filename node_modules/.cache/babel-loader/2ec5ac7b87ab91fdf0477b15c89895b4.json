{"ast":null,"code":"import { createRouter, createWebHistory, createWebHashHistory } from \"vue-router\";\nimport { RouteRecordRaw } from 'vue-router';\nimport LoginPlane from \"../views/login/cpns/login-panel\";\nimport LoginName from \"../views/login/login-name\";\nimport MainName from '@/views/main/main-name';\nimport HelloWorld from './component/HelloWorld.vue';\nlet router = createRouter({\n  history: createWebHashHistory(),\n  routes: [// 路由列表，里面的每一个成员都是一个url地址和组件的映射关系\n  {\n    path: \"/\",\n    component: LoginName // redirect: \"/main\"\n\n  }, {\n    name: \"main\",\n    path: \"/main\",\n    component: MainName\n  },, {\n    name: \"heallo\",\n    path: \"/heallo\",\n    component: HelloWorld\n  }],\n  children: [{\n    path: \"wu\",\n    name: \"wu\",\n    component: LoginPlane\n  }]\n}); //设置登录过期时间（一天）\n\nlet EXPIRESTIME = 86400000; // 校验登录\n\nrouter.beforeEach(function (to, from, next) {//     //页面是否登录，本地存储中是否有token(uid)数据，否：跳转登录页面\n  //     let item = localStorage.getItem(\"token\");\n  //     try {\n  //         item = JSON.parse(item);\n  //     } catch (error) {\n  //         // eslint-disable-next-line no-self-assign\n  //         item = item;\n  //     }\n  //     if (item) {\n  //         let date = new Date().getTime();\n  //         // 如果大于就是过期了，如果小于或等于就还没过期\n  //         if (date - item.startTime > EXPIRESTIME) {\n  //             localStorage.removeItem('token');\n  //             next({\n  //                 name: \"/\"\n  //             });\n  //         } else {\n  //             next();\n  //         }\n  //     } else {\n  //         next({\n  //             name: \"/\"\n  //         });\n  //     }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","createWebHashHistory","RouteRecordRaw","LoginPlane","LoginName","MainName","HelloWorld","router","history","routes","path","component","name","children","EXPIRESTIME","beforeEach","to","from","next"],"sources":["E:/CaiCai/前端学习/Vue学习/job-web-vue3/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory, createWebHashHistory } from \"vue-router\"\r\nimport { RouteRecordRaw } from 'vue-router'\r\n\r\nimport LoginPlane from \"../views/login/cpns/login-panel\";\r\nimport LoginName from \"../views/login/login-name\";\r\nimport MainName from '@/views/main/main-name'\r\nimport HelloWorld from './component/HelloWorld.vue'\r\n\r\nlet router = createRouter({\r\n    history: createWebHashHistory(),\r\n    routes: [ // 路由列表，里面的每一个成员都是一个url地址和组件的映射关系\r\n        {\r\n            path: \"/\",\r\n            component: LoginName,\r\n            // redirect: \"/main\"\r\n        },\r\n        {\r\n            name: \"main\",\r\n            path: \"/main\",\r\n            component: MainName,\r\n        }, ,\r\n        {\r\n            name: \"heallo\",\r\n            path: \"/heallo\",\r\n            component: HelloWorld,\r\n        }\r\n    ],\r\n    children: [{\r\n        path: \"wu\",\r\n        name: \"wu\",\r\n        component: LoginPlane\r\n    }]\r\n});\r\n\r\n//设置登录过期时间（一天）\r\nlet EXPIRESTIME = 86400000;\r\n\r\n// 校验登录\r\nrouter.beforeEach(function(to, from, next) {\r\n    //     //页面是否登录，本地存储中是否有token(uid)数据，否：跳转登录页面\r\n    //     let item = localStorage.getItem(\"token\");\r\n    //     try {\r\n    //         item = JSON.parse(item);\r\n    //     } catch (error) {\r\n    //         // eslint-disable-next-line no-self-assign\r\n    //         item = item;\r\n    //     }\r\n    //     if (item) {\r\n    //         let date = new Date().getTime();\r\n    //         // 如果大于就是过期了，如果小于或等于就还没过期\r\n    //         if (date - item.startTime > EXPIRESTIME) {\r\n    //             localStorage.removeItem('token');\r\n    //             next({\r\n    //                 name: \"/\"\r\n    //             });\r\n    //         } else {\r\n    //             next();\r\n    //         }\r\n    //     } else {\r\n    //         next({\r\n    //             name: \"/\"\r\n    //         });\r\n    //     }\r\n\r\n});\r\nexport default router"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,EAAyCC,oBAAzC,QAAqE,YAArE;AACA,SAASC,cAAT,QAA+B,YAA/B;AAEA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,IAAIC,MAAM,GAAGR,YAAY,CAAC;EACtBS,OAAO,EAAEP,oBAAoB,EADP;EAEtBQ,MAAM,EAAE,CAAE;EACN;IACIC,IAAI,EAAE,GADV;IAEIC,SAAS,EAAEP,SAFf,CAGI;;EAHJ,CADI,EAMJ;IACIQ,IAAI,EAAE,MADV;IAEIF,IAAI,EAAE,OAFV;IAGIC,SAAS,EAAEN;EAHf,CANI,GAWJ;IACIO,IAAI,EAAE,QADV;IAEIF,IAAI,EAAE,SAFV;IAGIC,SAAS,EAAEL;EAHf,CAXI,CAFc;EAmBtBO,QAAQ,EAAE,CAAC;IACPH,IAAI,EAAE,IADC;IAEPE,IAAI,EAAE,IAFC;IAGPD,SAAS,EAAER;EAHJ,CAAD;AAnBY,CAAD,CAAzB,C,CA0BA;;AACA,IAAIW,WAAW,GAAG,QAAlB,C,CAEA;;AACAP,MAAM,CAACQ,UAAP,CAAkB,UAASC,EAAT,EAAaC,IAAb,EAAmBC,IAAnB,EAAyB,CACvC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEH,CA1BD;AA2BA,eAAeX,MAAf"},"metadata":{},"sourceType":"module"}