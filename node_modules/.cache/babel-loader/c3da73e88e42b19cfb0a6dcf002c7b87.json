{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-70dde902\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"register\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"注册\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_User = _resolveComponent(\"User\");\n\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_Key = _resolveComponent(\"Key\");\n\n  const _component_CircleCheck = _resolveComponent(\"CircleCheck\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_form, {\n    ref: \"ruleFormRef.account\",\n    model: $data.account,\n    \"status-icon\": \"\",\n    rules: $data.rules,\n    \"label-width\": \"120px\",\n    class: \"demo-ruleForm\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"用户名\",\n      prop: \"username\"\n    }, {\n      label: _withCtx(() => [_createVNode(_component_el_icon, {\n        style: {\n          \"padding-top\": \"10px\"\n        },\n        size: \"20px\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_User)]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        size: \"large\",\n        modelValue: $data.account.username,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.account.username = $event),\n        placeholder: \"请输入用户名\",\n        autocomplete: \"off\"\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_form_item, {\n      label: \"密码\",\n      prop: \"password\"\n    }, {\n      label: _withCtx(() => [_createVNode(_component_el_icon, {\n        style: {\n          \"padding-top\": \"10px\"\n        },\n        size: \"24px\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_Key)]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        size: \"large\",\n        modelValue: $data.account.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.account.password = $event),\n        type: \"password\",\n        placeholder: \"请输入密码\",\n        autocomplete: \"off\"\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_form_item, {\n      label: \"确认密码\",\n      prop: \"confirm_pwd\"\n    }, {\n      label: _withCtx(() => [_createVNode(_component_el_icon, {\n        style: {\n          \"padding-top\": \"10px\"\n        },\n        size: \"24px\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_CircleCheck)]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        size: \"large\",\n        modelValue: $data.account.confirm_pwd,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.account.confirm_pwd = $event),\n        type: \"password\",\n        placeholder: \"请再次输入密码\",\n        autocomplete: \"off\"\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createCommentVNode(\" <el-form-item>\\r\\n             <el-checkbox v-model=\\\"account.isRemberPwd\\\"  label=\\\"记住密码\\\" size=\\\"large\\\" />\\r\\n              <el-link style=\\\"margin-left:210px\\\"  type=\\\"primary\\\">忘记密码？</el-link>\\r\\n    </el-form-item> \"), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        style: {\n          \"width\": \"100%\",\n          \"font-size\": \"16px\",\n          \"font-weight\": \"bold\"\n        },\n        size: \"large\",\n        type: \"primary\",\n        onClick: _cache[3] || (_cache[3] = $event => _ctx.submitForm(_ctx.ruleFormRef))\n      }, {\n        default: _withCtx(() => [_hoisted_2]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"model\", \"rules\"])]);\n}","map":{"version":3,"mappings":";;;;;EACQA,EAAE,EAAC;;;iDAyBsH;;;;;;;;;;;;;;;;;;;uBAzB9HC,oBA6BM,KA7BN,cA6BM,CA5BFC,aA2BKC,kBA3BL,EA2BK;IA3BIC,GAAG,EAAC,qBA2BR;IA3B+BC,KAAK,EAAEC,aA2BtC;IA3BgD,iBA2BhD;IA3B6DC,KAAK,EAAED,WA2BpE;IA3B2E,eAAY,OA2BvF;IA3B+FE,KAAK,EAAC;EA2BrG,CA3BL;sBACD,MAKa,CALbN,aAKaO,uBALb,EAKa;MALCC,KAAK,EAAC,KAKP;MALcC,IAAI,EAAC;IAKnB,CALb;MACmBD,KAAK,WACnB,MAAiE,CAAjER,aAAiEU,kBAAjE,EAAiE;QAAxDC,KAAyB,EAAzB;UAAA;QAAA,CAAwD;QAA9BC,IAAI,EAAC;MAAyB,CAAjE;0BAA+C,MAAQ,CAARZ,aAAQa,eAAR,CAAQ;;;;OAAvD,CAAiE,CAD9C;wBAGvB,MAA8F,CAA9Fb,aAA8Fc,mBAA9F,EAA8F;QAApFF,IAAI,EAAC,OAA+E;oBAA9DR,cAAQW,QAAsD;mEAA9DX,cAAQW,WAAQC,OAA8C;QAA1CC,WAAW,EAAC,QAA8B;QAArBC,YAAY,EAAC;MAAQ,CAA9F;;MAAA,iBAA8F;;;;KAJ/F,CAKa,EACflB,aAKeO,uBALf,EAKe;MALDC,KAAK,EAAC,IAKL;MALUC,IAAI,EAAC;IAKf,CALf;MACwBD,KAAK,WACtB,MAAgE,CAAhER,aAAgEU,kBAAhE,EAAgE;QAAvDC,KAAyB,EAAzB;UAAA;QAAA,CAAuD;QAA7BC,IAAI,EAAC;MAAwB,CAAhE;0BAA+C,MAAO,CAAPZ,aAAOmB,cAAP,CAAO;;;;OAAtD,CAAgE,CAD1C;wBAG3B,MAA4G,CAA5GnB,aAA4Gc,mBAA5G,EAA4G;QAAjGF,IAAI,EAAC,OAA4F;oBAA3ER,cAAQgB,QAAmE;mEAA3EhB,cAAQgB,WAAQJ,OAA2D;QAAzDK,IAAI,EAAC,UAAoD;QAAzCJ,WAAW,EAAC,OAA6B;QAArBC,YAAY,EAAC;MAAQ,CAA5G;;MAAA,iBAA4G;;;;KAJ9G,CADe,EAOXlB,aAKWO,uBALX,EAKW;MALGC,KAAK,EAAC,MAKT;MALgBC,IAAI,EAAC;IAKrB,CALX;MACoBD,KAAK,WACtB,MAAwE,CAAxER,aAAwEU,kBAAxE,EAAwE;QAA/DC,KAAyB,EAAzB;UAAA;QAAA,CAA+D;QAArCC,IAAI,EAAC;MAAgC,CAAxE;0BAA+C,MAAe,CAAfZ,aAAesB,sBAAf,CAAe;;;;OAA9D,CAAwE,CADlD;wBAG3B,MAAiH,CAAjHtB,aAAiHc,mBAAjH,EAAiH;QAAtGF,IAAI,EAAC,OAAiG;oBAAhFR,cAAQmB,WAAwE;mEAAhFnB,cAAQmB,cAAWP,OAA6D;QAA3DK,IAAI,EAAC,UAAsD;QAA3CJ,WAAW,EAAC,SAA+B;QAArBC,YAAY,EAAC;MAAQ,CAAjH;;MAAA,iBAAiH;;;;KAJ/G,CAPW,EAadM,qPAbc,EAiBfxB,aAEeO,uBAFf,EAEe,IAFf,EAEe;wBADb,MAA0I,CAA1IP,aAA0IyB,oBAA1I,EAA0I;QAA/Hd,KAAkD,EAAlD;UAAA;UAAA;UAAA;QAAA,CAA+H;QAA5EC,IAAI,EAAC,OAAuE;QAA/DS,IAAI,EAAC,SAA0D;QAA/CK,OAAK,sCAAEC,gBAAWA,gBAAX,CAAF;MAA0C,CAA1I;0BAA2H,MAAE;;;;OAA7H,CAA0I,EAC7H;;;;IAAA,CAFf,CAjBe;;;;GANZ;;EAAA,qBA4BE,CA7BN","names":["id","_createElementBlock","_createVNode","_component_el_form","ref","model","$data","rules","class","_component_el_form_item","label","prop","_component_el_icon","style","size","_component_User","_component_el_input","username","$event","placeholder","autocomplete","_component_Key","password","type","_component_CircleCheck","confirm_pwd","_createCommentVNode","_component_el_button","onClick","_ctx"],"sourceRoot":"","sources":["E:\\CaiCai\\前端学习\\Vue学习\\job-web-vue3\\src\\views\\login\\cpns\\register-cpns.vue"],"sourcesContent":["<template>\r\n   <div id=\"register\">\r\n       <el-form ref=\"ruleFormRef.account\" :model=\"account\"  status-icon :rules=\"rules\" label-width=\"120px\" class=\"demo-ruleForm\">\r\n      <el-form-item label=\"用户名\"  prop=\"username\">\r\n        <template v-slot:label>\r\n           <el-icon style=\"padding-top:10px;\" size=\"20px\"><User /></el-icon>\r\n        </template> \r\n       <el-input size=\"large\" v-model=\"account.username\"   placeholder=\"请输入用户名\" autocomplete=\"off\" />\r\n    </el-form-item>\r\n    <el-form-item label=\"密码\" prop=\"password\">\r\n           <template v-slot:label>\r\n           <el-icon style=\"padding-top:10px;\" size=\"24px\"><Key /></el-icon>\r\n        </template>\r\n      <el-input  size=\"large\" v-model=\"account.password\" type=\"password\" placeholder=\"请输入密码\" autocomplete=\"off\" />\r\n    </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"confirm_pwd\">\r\n           <template v-slot:label>\r\n           <el-icon style=\"padding-top:10px;\" size=\"24px\"><CircleCheck /></el-icon>\r\n        </template>\r\n      <el-input  size=\"large\" v-model=\"account.confirm_pwd\" type=\"password\" placeholder=\"请再次输入密码\" autocomplete=\"off\" />\r\n    </el-form-item>\r\n     <!-- <el-form-item>\r\n             <el-checkbox v-model=\"account.isRemberPwd\"  label=\"记住密码\" size=\"large\" />\r\n              <el-link style=\"margin-left:210px\"  type=\"primary\">忘记密码？</el-link>\r\n    </el-form-item> -->\r\n    <el-form-item>\r\n      <el-button style=\"width:100%;font-size:16px;font-weight:bold\" size=\"large\" type=\"primary\" @click=\"submitForm(ruleFormRef)\">注册</el-button >\r\n    </el-form-item>\r\n   \r\n  </el-form>\r\n   </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\ndata(){\r\n      let checkLen=(rule,value,callback)=>{\r\n        if(value.length<6||value.length>14){\r\n          return callback(new Error('长度须在6-14之间'));\r\n        }\r\n       };\r\n       let checkConfirmPwd=(rule,value,callback)=>{\r\n          if(value!=this.account.password){\r\n              return callback(new Error('两次密码输入不一致'));\r\n          }\r\n       }\r\n        return {\r\n            account:{\r\n                username:\"\",\r\n                password:\"\",\r\n                confirm_pwd:\"\",\r\n                isRemberPwd:true\r\n             },\r\n            rules:{\r\n              // 需要和v-model里面的字段名一致\r\n              username:[\r\n                  {    \r\n                    pattern: /^[\\x7f-\\xffA-Za-z0-9_]+$/,\r\n                    message: \"不允许中文\",\r\n                    trigger: \"blur\",\r\n                    \r\n                  },\r\n                 {\r\n                  required: true,\r\n                  message: '用户名不能为空',\r\n                  trigger: 'blur'\r\n                 },\r\n                 {\r\n                    validator: checkLen,\r\n                    trigger: 'blur' \r\n                 }\r\n              ],\r\n              password:[\r\n                {\r\n                 required: true,\r\n                 message: '密码不能为空',\r\n                 trigger: 'blur'\r\n                },\r\n                 {\r\n                    validator: checkLen,\r\n                    trigger: 'blur' \r\n                 }\r\n              ],\r\n              confirm_pwd:[\r\n                {\r\n                 required: true,\r\n                 message: '请再次输入密码',\r\n                 trigger: 'blur'\r\n              },\r\n              {\r\n                    validator: checkConfirmPwd,\r\n                    trigger: 'blur' \r\n              }\r\n              ]\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n   #register{\r\n    margin-top: 40px;\r\n    margin-left: -100px;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}