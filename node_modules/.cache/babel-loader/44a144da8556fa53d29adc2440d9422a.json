{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-3d9dd03b\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"goodspanel\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"grid-content ep-bg-purple\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"echart_userOrigin\"\n})], -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"grid-content ep-bg-purple\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"echart_orderCity\"\n})], -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"grid-content ep-bg-purple-light\"\n}, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_col = _resolveComponent(\"el-col\");\n\n  const _component_el_row = _resolveComponent(\"el-row\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" <h2>goodspanel</h2> \"), _createVNode(_component_el_row, {\n    gutter: \"5\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 7\n    }, {\n      default: _withCtx(() => [_hoisted_2]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_col, {\n      span: 9\n    }, {\n      default: _withCtx(() => [_hoisted_3]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_col, {\n      span: 7\n    }, {\n      default: _withCtx(() => [_hoisted_4]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  })]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;gEAILC,oBAGM,KAHN,EAGM;EAHDD,KAAK,EAAC;AAGL,CAHN,EAAsC,cAClCC,oBACM,KADN,EACM;EADDC,EAAE,EAAC;AACF,CADN,CADkC,CAAtC;;AAAA;;gEAMAD,oBAGM,KAHN,EAGM;EAHDD,KAAK,EAAC;AAGL,CAHN,EAAsC,cAClCC,oBACM,KADN,EACM;EADDC,EAAE,EAAC;AACF,CADN,CADkC,CAAtC;;AAAA;;gEAKgBD,oBAA+C,KAA/C,EAA+C;EAA1CD,KAAK,EAAC;AAAoC,CAA/C,EAA4C,IAA5C,EAA4C;AAAA;AAA5C;;;;;;;uBAftBG,oBAiBM,KAjBN,cAiBM,CAhBJC,4CAgBI,EAfHC,aAcMC,iBAdN,EAcM;IAdEC,MAAM,EAAC;EAcT,CAdN,EAAkB;sBACjB,MAKS,CALTF,aAKSG,iBALT,EAKS;MALAC,IAAI,EAAE;IAKN,CALT,EAAgB;wBACd,MAGM,CAHNC,UAGM,EAJQ;;;;IAAA,CAAhB,CAKS,EACTL,aAKSG,iBALT,EAKS;MALAC,IAAI,EAAE;IAKN,CALT,EAAgB;wBACd,MAGM,CAHNE,UAGM,EAJQ;;;;IAAA,CAAhB,CADS,EAOTN,aAA0EG,iBAA1E,EAA0E;MAAjEC,IAAI,EAAE;IAA2D,CAA1E,EAAgB;wBAAE,MAA+C,CAA/CG,UAA+C,EAAjD;;;;IAAA,CAAhB,CAPS,EANQ;;;;EAAA,CAAlB,CAeG,CAjBN","names":["class","_createElementVNode","id","_createElementBlock","_createCommentVNode","_createVNode","_component_el_row","gutter","_component_el_col","span","_hoisted_2","_hoisted_3","_hoisted_4"],"sourceRoot":"","sources":["E:\\CaiCai\\前端学习\\Vue学习\\job-web-vue3\\src\\views\\main\\system\\goodspanel\\goodspanel.vue"],"sourcesContent":["<template>\n  <div class=\"goodspanel\">\n    <!-- <h2>goodspanel</h2> -->\n     <el-row gutter=\"5\">\n      <el-col :span=\"7\">\n        <div class=\"grid-content ep-bg-purple\"  >\n            <div id=\"echart_userOrigin\">\n            </div>\n        </div>\n      </el-col>\n      <el-col :span=\"9\">\n        <div class=\"grid-content ep-bg-purple\" >\n            <div id=\"echart_orderCity\">\n            </div>\n        </div>\n      </el-col>\n      <el-col :span=\"7\"><div class=\"grid-content ep-bg-purple-light\" /></el-col>\n  </el-row>\n  </div>\n</template>\n\n<script>\n// 按需引入\nimport * as echarts from 'echarts/core';\nimport {\n  TitleComponent,\n  TooltipComponent,\n  LegendComponent\n} from 'echarts/components';\nimport { PieChart } from 'echarts/charts';\nimport { LabelLayout } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport china from '@/assets/json/china';\nimport { registerMap } from 'echarts/core';\n\necharts.use([\n  TitleComponent,\n  TooltipComponent,\n  LegendComponent,\n  PieChart,\n  CanvasRenderer,\n  LabelLayout,\n  registerMap\n]);\n\n\nexport default({\n  name: 'goodspanel',\n  data(){\n     let userOriginData = {\n              title: {\n                text: '用户访问来源',\n                subtext: '虚构数据',\n                left: 'center'\n              },\n              tooltip: {\n                trigger: 'item'\n              },\n              legend: {\n                orient: 'vertical',\n                left: 'left'\n              },\n              series: [\n                {\n                  name: 'Access From',\n                  type: 'pie',\n                  radius: '50%',\n                  data: [\n                    { value: 1048, name: '搜索引擎' },\n                    { value: 735, name: '直接访问' },\n                    { value: 580, name: '邮件营销' },\n                    { value: 484, name: '联盟广告' },\n                    { value: 300, name: '视频广告' }\n                  ],\n                  emphasis: {\n                    itemStyle: {\n                      shadowBlur: 10,\n                      shadowOffsetX: 0,\n                      shadowColor: 'rgba(0, 0, 0, 0.5)'\n                    }\n                  }\n                }\n              ]\n      };\n      let orderCityData= {\n      title: {\n        text: 'Population Density of Hong Kong （2011）',\n        subtext: 'Data from Wikipedia',\n        sublink:\n          'http://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%A1%8C%E6%94%BF%E5%8D%80%E5%8A%83#cite_note-12'\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: '{b}<br/>{c} (p / km2)'\n      },\n      toolbox: {\n        show: true,\n        orient: 'vertical',\n        left: 'right',\n        top: 'center',\n        feature: {\n          dataView: { readOnly: false },\n          restore: {},\n          saveAsImage: {}\n        }\n      },\n      visualMap: {\n        min: 800,\n        max: 50000,\n        text: ['High', 'Low'],\n        realtime: false,\n        calculable: true,\n        inRange: {\n          color: ['lightskyblue', 'yellow', 'orangered']\n        }\n      },\n      series: [\n        {\n          name: '香港18区人口密度',\n          type: 'map',\n          map: 'HK',\n          label: {\n            show: true\n          },\n          data: [\n            { name: '中西区', value: 20057.34 },\n            { name: '湾仔', value: 15477.48 },\n            { name: '东区', value: 31686.1 },\n            { name: '南区', value: 6992.6 },\n            { name: '油尖旺', value: 44045.49 },\n            { name: '深水埗', value: 40689.64 },\n            { name: '九龙城', value: 37659.78 },\n            { name: '黄大仙', value: 45180.97 },\n            { name: '观塘', value: 55204.26 },\n            { name: '葵青', value: 21900.9 },\n            { name: '荃湾', value: 4918.26 },\n            { name: '屯门', value: 5881.84 },\n            { name: '元朗', value: 4178.01 },\n            { name: '北区', value: 2227.92 },\n            { name: '大埔', value: 2180.98 },\n            { name: '沙田', value: 9172.94 },\n            { name: '西贡', value: 3368 },\n            { name: '离岛', value: 806.98 }\n          ],\n          // 自定义名称映射\n          nameMap: {\n            'Central and Western': '中西区',\n            Eastern: '东区',\n            Islands: '离岛',\n            'Kowloon City': '九龙城',\n            'Kwai Tsing': '葵青',\n            'Kwun Tong': '观塘',\n            North: '北区',\n            'Sai Kung': '西贡',\n            'Sha Tin': '沙田',\n            'Sham Shui Po': '深水埗',\n            Southern: '南区',\n            'Tai Po': '大埔',\n            'Tsuen Wan': '荃湾',\n            'Tuen Mun': '屯门',\n            'Wan Chai': '湾仔',\n            'Wong Tai Sin': '黄大仙',\n            'Yau Tsim Mong': '油尖旺',\n            'Yuen Long': '元朗'\n          }\n        }\n      ]\n    };\n    return {\n      userOriginData,orderCityData\n    }\n  },\n  mounted(){\n      this.getUserOrigin();\n      this.getOrderCity();\n  },\n  methods:{\n        getUserOrigin(){ \n              let echart_userOrigin = echarts.init(document.getElementById('echart_userOrigin'),null,{\n                height:\"450px\"\n              });\n              echart_userOrigin.setOption(this.userOriginData);\n              window.addEventListener(\"resize\", function () {\n                 echart_userOrigin.resize();\n              });\n        },\n         getOrderCity(){ \n              let echart_orderCity = echarts.init(document.getElementById('echart_orderCity'),null,{\n                height:\"450px\"\n              });\n              echarts.registerMap('china', china);\n              echart_orderCity.setOption(this.orderCityData);\n              window.addEventListener(\"resize\", function () {\n                 echart_orderCity.resize();\n              });\n        },\n   }\n  ,\n  setup() {\n    return {}\n  }\n})\n</script>\n\n<style scoped>\n.el-row {\n  margin-bottom: 20px;\n}\n.el-row:last-child {\n  margin-bottom: 0;\n}\n.el-col {\n  border-radius: 4px;\n}\n\n.grid-content {\n  border-radius: 4px;\n  min-height: 36px;\n  background: white;\n}\n.goodspanel{\n  padding: 10px;\n}\n#echart_userOrigin{\n   padding: 15px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}