{"ast":null,"code":"import axios from 'axios';\nimport qs from 'qs'; //querystring\n\nclass caiRequest {\n  constructor(config) {\n    this.instance = axios.create(config.axios_config);\n    this.Interceptors = config.Interceptors; //axios拦截请求前后\n\n    this.instance.interceptors.request.use(this.Interceptors.requestInterceptor, this.Interceptors.requestInterceptorCatch); //axios拦截响应前后\n\n    this.instance.interceptors.response.use(this.Interceptors.responseInterceptor, this.Interceptors.responseInterceptorCatch);\n  }\n\n  getRequest(url, params, config) {\n    //单独拦截\n    if (config != null) {\n      config = config.Interceptors.requestInterceptor(config);\n    } //this.instance=axios实例\n\n\n    let where;\n\n    if (params != null) {\n      //bomb云数据库 请求方式\n      where = '?where=' + JSON.stringify(params);\n      url = url + where;\n    }\n\n    let data;\n    return this.instance.get(url, params).then(res => {\n      // data = JSON.stringify(res.data);\n      return res.data; // console.log(res);\n      //  return Promise.resolve(res.data);\n    }).catch(function (error) {\n      console.log(error);\n    }); // console.log(data);\n    // return data;\n  }\n\n  postRequest(url, data, res) {\n    //单独拦截\n    if (res != null) {\n      res = res.Interceptors.responseInterceptor(res);\n    } //this.instance=axios实例\n\n\n    this.instance.post(url, data).then(res => {\n      console.log(res);\n      return Promise.resolve(res.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n} //axios直接配置请求方法\n\n\nfunction post(url, data) {\n  //  post\n  return axios({\n    method: 'post',\n    baseURL: process.env.BASEURL,\n    url,\n    data: qs.stringify(data),\n    timeout: config.timeout,\n    headers: config.headers // headers: {\n    //     'X-Requested-With': 'XMLHttpRequest',\n    //     'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    // }\n\n  }).then(response => {\n    console.log(response);\n  }).catch(res => {\n    console.log(res);\n  });\n}\n\nfunction get(url, params) {\n  // get\n  return axios({\n    method: 'get',\n    baseURL: process.env.BASEURL,\n    url,\n    params,\n    // get 请求时带的参数\n    timeout: config.timeout,\n    headers: config.headers // headers: {\n    //     'X-Requested-With': 'XMLHttpRequest'\n    // }\n\n  }).then(response => {\n    console.log(response);\n  }).catch(res => {\n    console.log(res);\n  });\n}\n\nexport default caiRequest;","map":{"version":3,"names":["axios","qs","caiRequest","constructor","config","instance","create","axios_config","Interceptors","interceptors","request","use","requestInterceptor","requestInterceptorCatch","response","responseInterceptor","responseInterceptorCatch","getRequest","url","params","where","JSON","stringify","data","get","then","res","catch","error","console","log","postRequest","post","Promise","resolve","method","baseURL","process","env","BASEURL","timeout","headers"],"sources":["E:/CaiCai/前端学习/Vue学习/job-web-vue3/src/service/request/caiRequest.js"],"sourcesContent":["import axios from 'axios'\r\nimport qs from 'qs' //querystring\r\n\r\nclass caiRequest {\r\n    constructor(config) {\r\n        this.instance = axios.create(config.axios_config);\r\n        this.Interceptors = config.Interceptors;\r\n        //axios拦截请求前后\r\n        this.instance.interceptors.request.use(\r\n            this.Interceptors.requestInterceptor,\r\n            this.Interceptors.requestInterceptorCatch\r\n        );\r\n        //axios拦截响应前后\r\n        this.instance.interceptors.response.use(\r\n            this.Interceptors.responseInterceptor,\r\n            this.Interceptors.responseInterceptorCatch\r\n        );\r\n    }\r\n\r\n    getRequest(url, params, config) {\r\n        //单独拦截\r\n        if (config != null) {\r\n            config = config.Interceptors.requestInterceptor(config);\r\n        }\r\n        //this.instance=axios实例\r\n        let where;\r\n        if (params != null) {\r\n            //bomb云数据库 请求方式\r\n            where = '?where=' + JSON.stringify(params);\r\n            url = url + where;\r\n        }\r\n        let data;\r\n        return this.instance.get(url, params).then((res) => {\r\n            // data = JSON.stringify(res.data);\r\n            return res.data;\r\n            // console.log(res);\r\n            //  return Promise.resolve(res.data);\r\n        }).catch(function(error) {\r\n            console.log(error);\r\n        });\r\n        // console.log(data);\r\n        // return data;\r\n    }\r\n    postRequest(url, data, res) {\r\n        //单独拦截\r\n        if (res != null) {\r\n            res = res.Interceptors.responseInterceptor(res);\r\n        }\r\n        //this.instance=axios实例\r\n        this.instance.post(url, data).then((res) => {\r\n            console.log(res);\r\n            return Promise.resolve(res.data);\r\n        }).catch(function(error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\n//axios直接配置请求方法\r\nfunction post(url, data) { //  post\r\n    return axios({\r\n        method: 'post',\r\n        baseURL: process.env.BASEURL,\r\n        url,\r\n        data: qs.stringify(data),\r\n        timeout: config.timeout,\r\n        headers: config.headers\r\n            // headers: {\r\n            //     'X-Requested-With': 'XMLHttpRequest',\r\n            //     'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n            // }\r\n    }).then((response) => {\r\n        console.log(response);\r\n    }).catch((res) => {\r\n        console.log(res);\r\n    })\r\n}\r\n\r\nfunction get(url, params) { // get\r\n    return axios({\r\n        method: 'get',\r\n        baseURL: process.env.BASEURL,\r\n        url,\r\n        params, // get 请求时带的参数\r\n        timeout: config.timeout,\r\n        headers: config.headers\r\n            // headers: {\r\n            //     'X-Requested-With': 'XMLHttpRequest'\r\n            // }\r\n    }).then((response) => {\r\n        console.log(response);\r\n    }).catch((res) => {\r\n        console.log(res);\r\n    })\r\n}\r\n\r\nexport default caiRequest;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf,C,CAAoB;;AAEpB,MAAMC,UAAN,CAAiB;EACbC,WAAW,CAACC,MAAD,EAAS;IAChB,KAAKC,QAAL,GAAgBL,KAAK,CAACM,MAAN,CAAaF,MAAM,CAACG,YAApB,CAAhB;IACA,KAAKC,YAAL,GAAoBJ,MAAM,CAACI,YAA3B,CAFgB,CAGhB;;IACA,KAAKH,QAAL,CAAcI,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CACI,KAAKH,YAAL,CAAkBI,kBADtB,EAEI,KAAKJ,YAAL,CAAkBK,uBAFtB,EAJgB,CAQhB;;IACA,KAAKR,QAAL,CAAcI,YAAd,CAA2BK,QAA3B,CAAoCH,GAApC,CACI,KAAKH,YAAL,CAAkBO,mBADtB,EAEI,KAAKP,YAAL,CAAkBQ,wBAFtB;EAIH;;EAEDC,UAAU,CAACC,GAAD,EAAMC,MAAN,EAAcf,MAAd,EAAsB;IAC5B;IACA,IAAIA,MAAM,IAAI,IAAd,EAAoB;MAChBA,MAAM,GAAGA,MAAM,CAACI,YAAP,CAAoBI,kBAApB,CAAuCR,MAAvC,CAAT;IACH,CAJ2B,CAK5B;;;IACA,IAAIgB,KAAJ;;IACA,IAAID,MAAM,IAAI,IAAd,EAAoB;MAChB;MACAC,KAAK,GAAG,YAAYC,IAAI,CAACC,SAAL,CAAeH,MAAf,CAApB;MACAD,GAAG,GAAGA,GAAG,GAAGE,KAAZ;IACH;;IACD,IAAIG,IAAJ;IACA,OAAO,KAAKlB,QAAL,CAAcmB,GAAd,CAAkBN,GAAlB,EAAuBC,MAAvB,EAA+BM,IAA/B,CAAqCC,GAAD,IAAS;MAChD;MACA,OAAOA,GAAG,CAACH,IAAX,CAFgD,CAGhD;MACA;IACH,CALM,EAKJI,KALI,CAKE,UAASC,KAAT,EAAgB;MACrBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH,CAPM,CAAP,CAb4B,CAqB5B;IACA;EACH;;EACDG,WAAW,CAACb,GAAD,EAAMK,IAAN,EAAYG,GAAZ,EAAiB;IACxB;IACA,IAAIA,GAAG,IAAI,IAAX,EAAiB;MACbA,GAAG,GAAGA,GAAG,CAAClB,YAAJ,CAAiBO,mBAAjB,CAAqCW,GAArC,CAAN;IACH,CAJuB,CAKxB;;;IACA,KAAKrB,QAAL,CAAc2B,IAAd,CAAmBd,GAAnB,EAAwBK,IAAxB,EAA8BE,IAA9B,CAAoCC,GAAD,IAAS;MACxCG,OAAO,CAACC,GAAR,CAAYJ,GAAZ;MACA,OAAOO,OAAO,CAACC,OAAR,CAAgBR,GAAG,CAACH,IAApB,CAAP;IACH,CAHD,EAGGI,KAHH,CAGS,UAASC,KAAT,EAAgB;MACrBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH,CALD;EAMH;;AApDY,C,CAuDjB;;;AACA,SAASI,IAAT,CAAcd,GAAd,EAAmBK,IAAnB,EAAyB;EAAE;EACvB,OAAOvB,KAAK,CAAC;IACTmC,MAAM,EAAE,MADC;IAETC,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,OAFZ;IAGTrB,GAHS;IAITK,IAAI,EAAEtB,EAAE,CAACqB,SAAH,CAAaC,IAAb,CAJG;IAKTiB,OAAO,EAAEpC,MAAM,CAACoC,OALP;IAMTC,OAAO,EAAErC,MAAM,CAACqC,OANP,CAOL;IACA;IACA;IACA;;EAVK,CAAD,CAAL,CAWJhB,IAXI,CAWEX,QAAD,IAAc;IAClBe,OAAO,CAACC,GAAR,CAAYhB,QAAZ;EACH,CAbM,EAaJa,KAbI,CAaGD,GAAD,IAAS;IACdG,OAAO,CAACC,GAAR,CAAYJ,GAAZ;EACH,CAfM,CAAP;AAgBH;;AAED,SAASF,GAAT,CAAaN,GAAb,EAAkBC,MAAlB,EAA0B;EAAE;EACxB,OAAOnB,KAAK,CAAC;IACTmC,MAAM,EAAE,KADC;IAETC,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,OAFZ;IAGTrB,GAHS;IAITC,MAJS;IAID;IACRqB,OAAO,EAAEpC,MAAM,CAACoC,OALP;IAMTC,OAAO,EAAErC,MAAM,CAACqC,OANP,CAOL;IACA;IACA;;EATK,CAAD,CAAL,CAUJhB,IAVI,CAUEX,QAAD,IAAc;IAClBe,OAAO,CAACC,GAAR,CAAYhB,QAAZ;EACH,CAZM,EAYJa,KAZI,CAYGD,GAAD,IAAS;IACdG,OAAO,CAACC,GAAR,CAAYJ,GAAZ;EACH,CAdM,CAAP;AAeH;;AAED,eAAexB,UAAf"},"metadata":{},"sourceType":"module"}