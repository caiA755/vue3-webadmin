{"ast":null,"code":"// import VueRouter from \"vue-router\";\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport { RouteRecordRaw } from 'vue-router';\nimport LoginPlane from \"../views/login/cpns/login-panel\";\nimport LoginName from \"../views/login/login-name\";\nimport HelloWorld from \"../components/HelloWorld\";\nlet router = createRouter({\n  history: createWebHistory(),\n  routes: [// 路由列表，里面的每一个成员都是一个url地址和组件的映射关系\n  {\n    path: \"/\",\n    component: LoginName // redirect: \"/login\"\n\n  }, {\n    path: \"/hi\",\n    component: HelloWorld,\n    meta: {\n      title: '这里是title'\n    }\n  }],\n  children: [{\n    path: \"wu\",\n    name: \"wu\",\n    component: LoginPlane\n  }]\n}); // 设置登录过期时间（一天）\n// let EXPIRESTIME = 86400000;\n// // 校验登录\n// router.beforeEach(function(to, from, next) {\n//     // if (to.meta.needLogin) {\n//     //     //页面是否登录，本地存储中是否有token(uid)数据，否：跳转登录页面\n//     //     let item = localStorage.getItem(\"token\");\n//     //     try {\n//     //         item = JSON.parse(item);\n//     //     } catch (error) {\n//     //         // eslint-disable-next-line no-self-assign\n//     //         item = item;\n//     //     }\n//     //     if (item) {\n//     //         let date = new Date().getTime();\n//     //         // 如果大于就是过期了，如果小于或等于就还没过期\n//     //         if (date - item.startTime > EXPIRESTIME) {\n//     //             localStorage.removeItem('token');\n//     //             next({\n//     //                 name: \"login\"\n//     //             });\n//     //         } else {\n//     //             next();\n//     //         }\n//     //     } else {\n//     //         next({\n//     //             name: \"login\"\n//     //         });\n//     //     }\n//     // } else {\n//     //     next();\n//     // }\n// });\n\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","RouteRecordRaw","LoginPlane","LoginName","HelloWorld","router","history","routes","path","component","meta","title","children","name"],"sources":["E:/CaiCai/前端学习/Vue学习/job-web-vue3/src/router/index.js"],"sourcesContent":["// import VueRouter from \"vue-router\";\r\nimport { createRouter, createWebHistory } from \"vue-router\"\r\nimport { RouteRecordRaw } from 'vue-router'\r\n\r\nimport LoginPlane from \"../views/login/cpns/login-panel\";\r\nimport LoginName from \"../views/login/login-name\";\r\nimport HelloWorld from \"../components/HelloWorld\";\r\n\r\nlet router = createRouter({\r\n    history: createWebHistory(),\r\n    routes: [ // 路由列表，里面的每一个成员都是一个url地址和组件的映射关系\r\n        {\r\n            path: \"/\",\r\n            component: LoginName,\r\n            // redirect: \"/login\"\r\n        },\r\n        {\r\n            path: \"/hi\",\r\n            component: HelloWorld,\r\n            meta: {\r\n                title: '这里是title'\r\n            }\r\n        }\r\n    ],\r\n    children: [{\r\n        path: \"wu\",\r\n        name: \"wu\",\r\n        component: LoginPlane\r\n    }]\r\n});\r\n\r\n// 设置登录过期时间（一天）\r\n// let EXPIRESTIME = 86400000;\r\n// // 校验登录\r\n// router.beforeEach(function(to, from, next) {\r\n//     // if (to.meta.needLogin) {\r\n//     //     //页面是否登录，本地存储中是否有token(uid)数据，否：跳转登录页面\r\n//     //     let item = localStorage.getItem(\"token\");\r\n//     //     try {\r\n//     //         item = JSON.parse(item);\r\n//     //     } catch (error) {\r\n//     //         // eslint-disable-next-line no-self-assign\r\n//     //         item = item;\r\n//     //     }\r\n//     //     if (item) {\r\n//     //         let date = new Date().getTime();\r\n//     //         // 如果大于就是过期了，如果小于或等于就还没过期\r\n//     //         if (date - item.startTime > EXPIRESTIME) {\r\n//     //             localStorage.removeItem('token');\r\n//     //             next({\r\n//     //                 name: \"login\"\r\n//     //             });\r\n//     //         } else {\r\n//     //             next();\r\n//     //         }\r\n//     //     } else {\r\n//     //         next({\r\n//     //             name: \"login\"\r\n//     //         });\r\n//     //     }\r\n//     // } else {\r\n//     //     next();\r\n//     // }\r\n// });\r\nexport default router"],"mappings":"AAAA;AACA,SAASA,YAAT,EAAuBC,gBAAvB,QAA+C,YAA/C;AACA,SAASC,cAAT,QAA+B,YAA/B;AAEA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,IAAIC,MAAM,GAAGN,YAAY,CAAC;EACtBO,OAAO,EAAEN,gBAAgB,EADH;EAEtBO,MAAM,EAAE,CAAE;EACN;IACIC,IAAI,EAAE,GADV;IAEIC,SAAS,EAAEN,SAFf,CAGI;;EAHJ,CADI,EAMJ;IACIK,IAAI,EAAE,KADV;IAEIC,SAAS,EAAEL,UAFf;IAGIM,IAAI,EAAE;MACFC,KAAK,EAAE;IADL;EAHV,CANI,CAFc;EAgBtBC,QAAQ,EAAE,CAAC;IACPJ,IAAI,EAAE,IADC;IAEPK,IAAI,EAAE,IAFC;IAGPJ,SAAS,EAAEP;EAHJ,CAAD;AAhBY,CAAD,CAAzB,C,CAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeG,MAAf"},"metadata":{},"sourceType":"module"}