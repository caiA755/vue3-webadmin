{"ast":null,"code":"// 按需引入\nimport * as echarts from 'echarts';\nimport { TitleComponent, TooltipComponent, LegendComponent } from 'echarts/components';\nimport { PieChart } from 'echarts/charts';\nimport { LabelLayout } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport china from '@/assets/json/china';\nimport { registerMap } from 'echarts/core';\necharts.use([TitleComponent, TooltipComponent, LegendComponent, PieChart, CanvasRenderer, LabelLayout]);\nexport default {\n  name: 'goodspanel',\n\n  data() {\n    let userOriginData = {\n      title: {\n        text: '用户访问来源',\n        subtext: '虚构数据',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left'\n      },\n      series: [{\n        name: 'Access From',\n        type: 'pie',\n        radius: '50%',\n        data: [{\n          value: 1048,\n          name: '搜索引擎'\n        }, {\n          value: 735,\n          name: '直接访问'\n        }, {\n          value: 580,\n          name: '邮件营销'\n        }, {\n          value: 484,\n          name: '联盟广告'\n        }, {\n          value: 300,\n          name: '视频广告'\n        }],\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }]\n    };\n    let orderCityData = {\n      title: {\n        text: '',\n        subtext: '不同城市商品销量',\n        sublink: 'http://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%A1%8C%E6%94%BF%E5%8D%80%E5%8A%83#cite_note-12'\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: '{b}<br/>{c}'\n      },\n      toolbox: {\n        show: true,\n        orient: 'vertical',\n        left: 'right',\n        top: 'center',\n        feature: {\n          dataView: {\n            readOnly: false\n          },\n          restore: {},\n          saveAsImage: {}\n        }\n      },\n      visualMap: {\n        min: 800,\n        max: 50000,\n        text: ['High', 'Low'],\n        realtime: false,\n        calculable: true,\n        inRange: {\n          color: ['lightskyblue', 'yellow', 'orangered']\n        }\n      },\n      series: [{\n        name: '',\n        type: 'map',\n        map: 'china',\n        label: {\n          show: false\n        },\n        data: [{\n          name: '湖南省',\n          value: 7990\n        }, {\n          name: '广东省',\n          value: 8880\n        }, {\n          name: '山西省',\n          value: 8880\n        }] // 自定义名称映射\n        // nameMap: {\n        //   \"湖南省\"\n        // }\n\n      }]\n    };\n    let categoryCountData = {\n      title: {\n        text: '',\n        subtext: '分类商品数量',\n        left: 'left'\n      },\n      legend: {\n        top: 'bottom'\n      },\n      toolbox: {\n        show: true,\n        feature: {\n          mark: {\n            show: true\n          },\n          dataView: {\n            show: true,\n            readOnly: false\n          },\n          restore: {\n            show: true\n          },\n          saveAsImage: {\n            show: true\n          }\n        }\n      },\n      series: [{\n        name: 'Nightingale Chart',\n        type: 'pie',\n        radius: [10, 120],\n        center: ['50%', '50%'],\n        roseType: 'area',\n        itemStyle: {\n          borderRadius: 8\n        },\n        data: [{\n          value: 40,\n          name: 'rose 1'\n        }, {\n          value: 38,\n          name: 'rose 2'\n        }, {\n          value: 32,\n          name: 'rose 3'\n        }, {\n          value: 30,\n          name: 'rose 4'\n        }, {\n          value: 28,\n          name: 'rose 5'\n        }, {\n          value: 26,\n          name: 'rose 6'\n        }, {\n          value: 22,\n          name: 'rose 7'\n        }, {\n          value: 18,\n          name: 'rose 8'\n        }]\n      }]\n    };\n    let orderCountData = {\n      title: {\n        text: '',\n        subtext: '不同城市商品销量'\n      },\n      xAxis: {\n        type: 'category',\n        data: ['牛奶', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        data: [150, 230, 224, 218, 135, 147, 260],\n        type: 'line'\n      }]\n    };\n    return {\n      userOriginData,\n      orderCityData,\n      categoryCountData,\n      orderCountData\n    };\n  },\n\n  mounted() {\n    this.getUserOrigin();\n    this.getOrderCity();\n    this.getCategoryCount();\n    this.getOrderCount();\n  },\n\n  methods: {\n    getUserOrigin() {\n      let echart_userOrigin = echarts.init(document.getElementById('echart_userOrigin'), null, {\n        height: \"390px\"\n      });\n      echart_userOrigin.setOption(this.userOriginData);\n      window.addEventListener(\"resize\", function () {\n        echart_userOrigin.resize();\n      });\n    },\n\n    getOrderCity() {\n      let echart_orderCity = echarts.init(document.getElementById('echart_orderCity'), null, {\n        height: \"390px\"\n      });\n      echarts.registerMap('china', china);\n      echart_orderCity.setOption(this.orderCityData);\n      window.addEventListener(\"resize\", function () {\n        echart_orderCity.resize();\n      });\n    },\n\n    getCategoryCount() {\n      let echart_categoryCount = echarts.init(document.getElementById('echart_categoryCount'), null, {\n        height: \"390px\"\n      });\n      echart_categoryCount.setOption(this.categoryCountData);\n      window.addEventListener(\"resize\", function () {\n        echart_categoryCount.resize();\n      });\n    },\n\n    getOrderCount() {\n      let echart_orderCount = echarts.init(document.getElementById('echart_orderCount'), null, {\n        height: \"390px\"\n      });\n      echart_orderCount.setOption(this.orderCountData);\n      window.addEventListener(\"resize\", function () {\n        echart_orderCount.resize();\n      });\n    }\n\n  },\n\n  setup() {\n    return {};\n  }\n\n};","map":{"version":3,"mappings":"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","names":["echarts","TitleComponent","TooltipComponent","LegendComponent","PieChart","LabelLayout","CanvasRenderer","china","registerMap","use","name","data","userOriginData","title","text","subtext","left","tooltip","trigger","legend","orient","series","type","radius","value","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","orderCityData","sublink","formatter","toolbox","show","top","feature","dataView","readOnly","restore","saveAsImage","visualMap","min","max","realtime","calculable","inRange","color","map","label","categoryCountData","mark","center","roseType","borderRadius","orderCountData","xAxis","yAxis","mounted","getUserOrigin","getOrderCity","getCategoryCount","getOrderCount","methods","echart_userOrigin","init","document","getElementById","height","setOption","window","addEventListener","resize","echart_orderCity","echart_categoryCount","echart_orderCount","setup"],"sourceRoot":"","sources":["E:\\CaiCai\\前端学习\\Vue学习\\job-web-vue3\\src\\views\\main\\system\\goodspanel\\goodspanel.vue"],"sourcesContent":["<template>\n  <div class=\"goodspanel\">\n    <!-- <h2>goodspanel</h2> -->\n     <el-row gutter=\"5\">\n      <el-col :span=\"7\">\n        <div class=\"grid-content ep-bg-purple\"  >\n            <div id=\"echart_userOrigin\">\n            </div>\n        </div>\n      </el-col>\n      <el-col :span=\"9\">\n        <div class=\"grid-content ep-bg-purple\" >\n            <div id=\"echart_orderCity\">\n            </div>\n        </div>\n      </el-col>\n      <el-col :span=\"8\">\n        <div class=\"grid-content ep-bg-purple-light\" >\n          <div id=\"echart_categoryCount\">\n            </div>\n        </div>\n        </el-col>\n  </el-row>\n    <el-row gutter=\"5\">\n      <el-col :span=\"12\">\n        <div class=\"grid-content ep-bg-purple\"  >\n            <div id=\"echart_orderCount\">\n            </div>\n        </div>\n      </el-col>\n      <el-col :span=\"12\">\n        <div class=\"grid-content ep-bg-purple\" >\n            <div id=\"echart_orderCity\">\n            </div>\n        </div>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\n// 按需引入\nimport * as echarts from 'echarts';\nimport {\n  TitleComponent,\n  TooltipComponent,\n  LegendComponent\n} from 'echarts/components';\nimport { PieChart } from 'echarts/charts';\nimport { LabelLayout } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport china from '@/assets/json/china';\nimport { registerMap } from 'echarts/core';\n\necharts.use([\n  TitleComponent,\n  TooltipComponent,\n  LegendComponent,\n  PieChart,\n  CanvasRenderer,\n  LabelLayout\n]);\n\n\nexport default({\n  name: 'goodspanel',\n  data(){\n     let userOriginData = {\n              title: {\n                text: '用户访问来源',\n                subtext: '虚构数据',\n                left: 'center'\n              },\n              tooltip: {\n                trigger: 'item'\n              },\n              legend: {\n                orient: 'vertical',\n                left: 'left'\n              },\n              series: [\n                {\n                  name: 'Access From',\n                  type: 'pie',\n                  radius: '50%',\n                  data: [\n                    { value: 1048, name: '搜索引擎' },\n                    { value: 735, name: '直接访问' },\n                    { value: 580, name: '邮件营销' },\n                    { value: 484, name: '联盟广告' },\n                    { value: 300, name: '视频广告' }\n                  ],\n                  emphasis: {\n                    itemStyle: {\n                      shadowBlur: 10,\n                      shadowOffsetX: 0,\n                      shadowColor: 'rgba(0, 0, 0, 0.5)'\n                    }\n                  }\n                }\n              ]\n      };\n      let orderCityData= {\n      title: {\n        text: '',\n        subtext: '不同城市商品销量',\n        sublink:\n          'http://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%A1%8C%E6%94%BF%E5%8D%80%E5%8A%83#cite_note-12'\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: '{b}<br/>{c}'\n      },\n      toolbox: {\n        show: true,\n        orient: 'vertical',\n        left: 'right',\n        top: 'center',\n        feature: {\n          dataView: { readOnly: false },\n          restore: {},\n          saveAsImage: {}\n        }\n      },\n      visualMap: {\n        min: 800,\n        max: 50000,\n        text: ['High', 'Low'],\n        realtime: false,\n        calculable: true,\n        inRange: {\n          color: ['lightskyblue', 'yellow', 'orangered']\n        }\n      },\n      series: [\n        {\n          name: '',\n          type: 'map',\n          map: 'china',\n          label: {\n            show: false\n          },\n          data: [\n            { name: '湖南省', value: 7990 },\n             { name: '广东省', value: 8880 },\n             { name: '山西省', value: 8880 }\n          ],\n          // 自定义名称映射\n          // nameMap: {\n          //   \"湖南省\"\n          // }\n        }\n      ]\n     };\n     let categoryCountData= {\n      title: {\n    text: '',\n    subtext: '分类商品数量',\n    left: 'left'\n  },\n  legend: {\n    top: 'bottom'\n  },\n  toolbox: {\n    show: true,\n    feature: {\n      mark: { show: true },\n      dataView: { show: true, readOnly: false },\n      restore: { show: true },\n      saveAsImage: { show: true }\n    }\n  },\n  series: [\n    {\n      name: 'Nightingale Chart',\n      type: 'pie',\n      radius: [10, 120],\n      center: ['50%', '50%'],\n      roseType: 'area',\n      itemStyle: {\n        borderRadius: 8\n      },\n      data: [\n        { value: 40, name: 'rose 1' },\n        { value: 38, name: 'rose 2' },\n        { value: 32, name: 'rose 3' },\n        { value: 30, name: 'rose 4' },\n        { value: 28, name: 'rose 5' },\n        { value: 26, name: 'rose 6' },\n        { value: 22, name: 'rose 7' },\n        { value: 18, name: 'rose 8' }\n      ]\n    }\n  ]\n      };\n    let orderCountData= {\n         title: {\n        text: '',\n        subtext: '不同城市商品销量',\n        },\n        xAxis: {\n          type: 'category',\n          data: ['牛奶', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [\n          {\n            data: [150, 230, 224, 218, 135, 147, 260],\n            type: 'line'\n          }\n        ]\n      };\n    return {\n      userOriginData,orderCityData,categoryCountData,orderCountData\n    }\n  },\n  mounted(){\n      this.getUserOrigin();\n      this.getOrderCity();\n      this.getCategoryCount();\n      this. getOrderCount();\n  },\n  methods:{\n        getUserOrigin(){ \n              let echart_userOrigin = echarts.init(document.getElementById('echart_userOrigin'),null,{\n                height:\"390px\"\n              });\n              echart_userOrigin.setOption(this.userOriginData);\n              window.addEventListener(\"resize\", function () {\n                 echart_userOrigin.resize();\n              });\n        },\n         getOrderCity(){ \n              let echart_orderCity = echarts.init(document.getElementById('echart_orderCity'),null,{\n                height:\"390px\"\n              });\n              echarts.registerMap('china', china);\n              echart_orderCity.setOption(this.orderCityData);\n              window.addEventListener(\"resize\", function () {\n                 echart_orderCity.resize();\n              });\n        },\n         getCategoryCount(){ \n              let echart_categoryCount = echarts.init(document.getElementById('echart_categoryCount'),null,{\n                height:\"390px\"\n              });\n              echart_categoryCount.setOption(this.categoryCountData);\n              window.addEventListener(\"resize\", function () {\n                 echart_categoryCount.resize();\n              });\n        },\n         getOrderCount(){ \n              let echart_orderCount = echarts.init(document.getElementById('echart_orderCount'),null,{\n                height:\"390px\"\n              });\n              echart_orderCount.setOption(this.orderCountData);\n              window.addEventListener(\"resize\", function () {\n                 echart_orderCount.resize();\n              });\n        },\n   }\n  ,\n  setup() {\n    return {}\n  }\n})\n</script>\n\n<style scoped>\n.el-row {\n  margin-bottom: 20px;\n}\n.el-row:last-child {\n  margin-bottom: 0;\n}\n.el-col {\n  border-radius: 4px;\n}\n\n.grid-content {\n  border-radius: 4px;\n  min-height: 36px;\n  background: white;\n}\n.goodspanel{\n  padding: 10px;\n}\n#echart_userOrigin,#echart_orderCity,#echart_categoryCount{\n   padding: 10px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}