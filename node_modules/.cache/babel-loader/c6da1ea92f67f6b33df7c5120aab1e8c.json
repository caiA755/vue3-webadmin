{"ast":null,"code":"import axios from 'axios';\nimport qs from 'qs'; //querystring\n\nclass caiRequest {\n  constructor(config) {\n    this.instance = axios.create(config.axios_config);\n    this.Interceptors = config.Interceptors;\n    this.isShowloading = config.isShowLoading; //axios拦截请求前后\n\n    this.instance.interceptors.request.use(this.Interceptors.requestInterceptor, this.Interceptors.requestInterceptorCatch); //axios拦截响应前后\n\n    this.instance.interceptors.response.use(this.Interceptors.responseInterceptor, this.Interceptors.responseInterceptorCatch);\n  }\n\n  getRequest(url, params, config) {\n    //单独拦截\n    if (config != null) {\n      config = config.Interceptors.requestInterceptor(config);\n      console.log(config);\n    }\n\n    if (config.isShowLoading != null) {\n      this.isShowloading = config.isShowLoading;\n    } //this.instance=axios实例\n\n\n    let where;\n\n    if (params != null) {\n      //bomb云数据库 请求方式\n      where = '?where=' + JSON.stringify(params);\n      url = url + where;\n    }\n\n    return this.instance.get(url, params).then(res => {\n      return res.data; // console.log(res);\n      //  return Promise.resolve(res.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  postRequest(url, data, res) {\n    //单独拦截\n    if (res != null) {\n      res = res.Interceptors.responseInterceptor(res);\n    } //this.instance=axios实例\n\n\n    this.instance.post(url, data).then(res => {\n      console.log(res);\n      return Promise.resolve(res.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n} //axios直接配置请求方法\n\n\nfunction post(url, data) {\n  //  post\n  return axios({\n    method: 'post',\n    baseURL: process.env.BASEURL,\n    url,\n    data: qs.stringify(data),\n    timeout: config.timeout,\n    headers: config.headers // headers: {\n    //     'X-Requested-With': 'XMLHttpRequest',\n    //     'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    // }\n\n  }).then(response => {\n    console.log(response);\n  }).catch(res => {\n    console.log(res);\n  });\n}\n\nfunction get(url, params) {\n  // get\n  return axios({\n    method: 'get',\n    baseURL: process.env.BASEURL,\n    url,\n    params,\n    // get 请求时带的参数\n    timeout: config.timeout,\n    headers: config.headers // headers: {\n    //     'X-Requested-With': 'XMLHttpRequest'\n    // }\n\n  }).then(response => {\n    console.log(response);\n  }).catch(res => {\n    console.log(res);\n  });\n}\n\nexport default caiRequest;","map":{"version":3,"names":["axios","qs","caiRequest","constructor","config","instance","create","axios_config","Interceptors","isShowloading","isShowLoading","interceptors","request","use","requestInterceptor","requestInterceptorCatch","response","responseInterceptor","responseInterceptorCatch","getRequest","url","params","console","log","where","JSON","stringify","get","then","res","data","catch","error","postRequest","post","Promise","resolve","method","baseURL","process","env","BASEURL","timeout","headers"],"sources":["E:/CaiCai/前端学习/Vue学习/job-web-vue3/src/service/request/caiRequest.js"],"sourcesContent":["import axios from 'axios'\r\nimport qs from 'qs' //querystring\r\n\r\nclass caiRequest {\r\n    constructor(config) {\r\n        this.instance = axios.create(config.axios_config);\r\n        this.Interceptors = config.Interceptors;\r\n        this.isShowloading = config.isShowLoading;\r\n        //axios拦截请求前后\r\n        this.instance.interceptors.request.use(\r\n            this.Interceptors.requestInterceptor,\r\n            this.Interceptors.requestInterceptorCatch\r\n        );\r\n        //axios拦截响应前后\r\n        this.instance.interceptors.response.use(\r\n            this.Interceptors.responseInterceptor,\r\n            this.Interceptors.responseInterceptorCatch\r\n        );\r\n    }\r\n    getRequest(url, params, config) {\r\n        //单独拦截\r\n        if (config != null) {\r\n            config = config.Interceptors.requestInterceptor(config);\r\n            console.log(config);\r\n        }\r\n        if (config.isShowLoading != null) {\r\n            this.isShowloading = config.isShowLoading;\r\n        }\r\n        //this.instance=axios实例\r\n        let where;\r\n        if (params != null) {\r\n            //bomb云数据库 请求方式\r\n            where = '?where=' + JSON.stringify(params);\r\n            url = url + where;\r\n        }\r\n        return this.instance.get(url, params).then((res) => {\r\n            return res.data;\r\n            // console.log(res);\r\n            //  return Promise.resolve(res.data);\r\n        }).catch(function(error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n    postRequest(url, data, res) {\r\n        //单独拦截\r\n        if (res != null) {\r\n            res = res.Interceptors.responseInterceptor(res);\r\n        }\r\n        //this.instance=axios实例\r\n        this.instance.post(url, data).then((res) => {\r\n            console.log(res);\r\n            return Promise.resolve(res.data);\r\n        }).catch(function(error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\n//axios直接配置请求方法\r\nfunction post(url, data) { //  post\r\n    return axios({\r\n        method: 'post',\r\n        baseURL: process.env.BASEURL,\r\n        url,\r\n        data: qs.stringify(data),\r\n        timeout: config.timeout,\r\n        headers: config.headers\r\n            // headers: {\r\n            //     'X-Requested-With': 'XMLHttpRequest',\r\n            //     'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n            // }\r\n    }).then((response) => {\r\n        console.log(response);\r\n    }).catch((res) => {\r\n        console.log(res);\r\n    })\r\n}\r\n\r\nfunction get(url, params) { // get\r\n    return axios({\r\n        method: 'get',\r\n        baseURL: process.env.BASEURL,\r\n        url,\r\n        params, // get 请求时带的参数\r\n        timeout: config.timeout,\r\n        headers: config.headers\r\n            // headers: {\r\n            //     'X-Requested-With': 'XMLHttpRequest'\r\n            // }\r\n    }).then((response) => {\r\n        console.log(response);\r\n    }).catch((res) => {\r\n        console.log(res);\r\n    })\r\n}\r\n\r\nexport default caiRequest;"],"mappings":"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"},"metadata":{},"sourceType":"module"}