{"ast":null,"code":"// service统一出口\nimport caiRequest from \"./request/caiRequest\";\nimport { ElLoading } from \"element-plus\";\nconst axios_config = {\n  headers: {\n    'X-Bmob-Application-Id': 'e536863a0210f9b43a1e5344b785de3d',\n    'X-Bmob-REST-API-Key': '37b324a62cedd302e6a22fc84e622a5a',\n    'Content-Type': 'application/json'\n  },\n  baseURL: 'https://api2.bmob.cn',\n  timeout: 5000,\n  \"Access-Control-Allow-Origin\": \"*\"\n};\nlet a = 1;\nconst cRequest1 = new caiRequest({\n  axios_config,\n  a,\n  Interceptors: {\n    requestInterceptor: config => {\n      console.log('请求成功的拦截');\n      console.log(axios_config);\n      a = ElLoading.service({\n        fullscreen: true\n      });\n      return config;\n    },\n    requestInterceptorCatch: config => {\n      console.log('请求错误的拦截');\n      return Promise.reject(error);\n    },\n    responseInterceptor: response => {\n      console.log('响应成功的拦截'); // ElLoading.close();\n\n      return response;\n    },\n    responseInterceptorCatch: response => {\n      console.log('响应后的拦截');\n      return response;\n    }\n  }\n});\nexport default cRequest1;","map":{"version":3,"names":["caiRequest","ElLoading","axios_config","headers","baseURL","timeout","a","cRequest1","Interceptors","requestInterceptor","config","console","log","service","fullscreen","requestInterceptorCatch","Promise","reject","error","responseInterceptor","response","responseInterceptorCatch"],"sources":["E:/CaiCai/前端学习/Vue学习/job-web-vue3/src/service/index.js"],"sourcesContent":["// service统一出口\r\nimport caiRequest from \"./request/caiRequest\"\r\nimport { ElLoading } from \"element-plus\";\r\n\r\nconst axios_config = {\r\n    headers: {\r\n        'X-Bmob-Application-Id': 'e536863a0210f9b43a1e5344b785de3d',\r\n        'X-Bmob-REST-API-Key': '37b324a62cedd302e6a22fc84e622a5a',\r\n        'Content-Type': 'application/json'\r\n    },\r\n    baseURL: 'https://api2.bmob.cn',\r\n    timeout: 5000,\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n};\r\nlet a = 1;\r\nconst cRequest1 = new caiRequest({\r\n    axios_config,\r\n    a,\r\n    Interceptors: {\r\n        requestInterceptor: (config) => {\r\n            console.log('请求成功的拦截');\r\n            console.log(axios_config);\r\n            a = ElLoading.service({ fullscreen: true });\r\n            return config;\r\n        },\r\n        requestInterceptorCatch: (config) => {\r\n            console.log('请求错误的拦截');\r\n            return Promise.reject(error);\r\n        },\r\n        responseInterceptor: (response) => {\r\n            console.log('响应成功的拦截');\r\n            // ElLoading.close();\r\n            return response;\r\n        },\r\n        responseInterceptorCatch: (response) => {\r\n            console.log('响应后的拦截');\r\n            return response;\r\n        }\r\n    }\r\n});\r\nexport default cRequest1;"],"mappings":"AAAA;AACA,OAAOA,UAAP,MAAuB,sBAAvB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE;IACL,yBAAyB,kCADpB;IAEL,uBAAuB,kCAFlB;IAGL,gBAAgB;EAHX,CADQ;EAMjBC,OAAO,EAAE,sBANQ;EAOjBC,OAAO,EAAE,IAPQ;EAQjB,+BAA+B;AARd,CAArB;AAUA,IAAIC,CAAC,GAAG,CAAR;AACA,MAAMC,SAAS,GAAG,IAAIP,UAAJ,CAAe;EAC7BE,YAD6B;EAE7BI,CAF6B;EAG7BE,YAAY,EAAE;IACVC,kBAAkB,EAAGC,MAAD,IAAY;MAC5BC,OAAO,CAACC,GAAR,CAAY,SAAZ;MACAD,OAAO,CAACC,GAAR,CAAYV,YAAZ;MACAI,CAAC,GAAGL,SAAS,CAACY,OAAV,CAAkB;QAAEC,UAAU,EAAE;MAAd,CAAlB,CAAJ;MACA,OAAOJ,MAAP;IACH,CANS;IAOVK,uBAAuB,EAAGL,MAAD,IAAY;MACjCC,OAAO,CAACC,GAAR,CAAY,SAAZ;MACA,OAAOI,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAP;IACH,CAVS;IAWVC,mBAAmB,EAAGC,QAAD,IAAc;MAC/BT,OAAO,CAACC,GAAR,CAAY,SAAZ,EAD+B,CAE/B;;MACA,OAAOQ,QAAP;IACH,CAfS;IAgBVC,wBAAwB,EAAGD,QAAD,IAAc;MACpCT,OAAO,CAACC,GAAR,CAAY,QAAZ;MACA,OAAOQ,QAAP;IACH;EAnBS;AAHe,CAAf,CAAlB;AAyBA,eAAeb,SAAf"},"metadata":{},"sourceType":"module"}