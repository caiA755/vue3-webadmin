{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport cRequest1 from '@/service/index.js';\nimport localCache from '../../../utils/cache.js';\nimport mainurl from '@/service/url/mainurl';\nimport { toRaw } from 'vue';\nimport router from '@/router/index.js';\nimport { ElLoading } from 'element-plus'; // import { el } from 'element-plus/es/locale';\n// import {useStore} from 'vuex'\n\nexport default {\n  data() {\n    let checkLen = (rule, value, callback) => {\n      if (value.length < 6 || value.length > 14) {\n        return callback(new Error('长度须在6-14之间'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      account: {\n        username: localCache.getCache('username') ?? '',\n        password: localCache.getCache('password') ?? '',\n        isRemberPwd: true\n      },\n      rules: {\n        // 需要和v-model里面的字段名一致\n        username: [{\n          pattern: /^[\\x7f-\\xffA-Za-z0-9_]+$/,\n          message: \"不允许中文\",\n          trigger: \"blur\"\n        }, {\n          required: true,\n          message: '用户名不能为空',\n          trigger: 'blur'\n        }, {\n          validator: checkLen,\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '密码不能为空',\n          trigger: 'blur'\n        }, {\n          validator: checkLen,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    submitForm() {\n      // console.log(this.$refs);\n      this.$refs.ruleFormRef.validate(async valid => {\n        if (valid) {\n          //账号是否存储\n          if (this.account.isRemberPwd) {\n            localCache.setCache(\"username\", this.account.username);\n            localCache.setCache(\"password\", this.account.password);\n          } else {\n            localCache.deleteCache(\"username\");\n            localCache.deleteCache(\"password\");\n          } //用户登录  Bmob上面的数据 无token （用userid暂替 localstorage添加字段设置过期时间）\n\n\n          let flag;\n          await cRequest1.getRequest(mainurl.userurl, `{\"username\":\"${this.account.username}\",\"password\":\"${this.account.password}\"}&groupcount=true&sum=username`).then(res => {\n            flag = res;\n          });\n          console.log(flag.results.length);\n\n          if (flag.results.length) {\n            //  isShowLoading=false;\n            //设置token\n            let params = {\n              name: 'token',\n              value: this.account.username\n            };\n            var datas = Object.assign(params, {\n              startTime: new Date().getTime()\n            });\n            localCache.setCache(\"token\", JSON.stringify(datas)); //登录之后请求用户信息 (根据username 把username存储到localstorage) \n\n            let userinfo;\n            await cRequest1.getRequest(mainurl.userurl, `{\"username\":\"${this.account.username}\"}&keys=username,status,objectId,email,mobile)`).then(res => {\n              userinfo = res;\n            });\n            localCache.setCache(\"userinfo\", userinfo); //  console.log();\n\n            let objectId = toRaw(localCache.getCache(\"userinfo\")).results[0].objectId; //查询roleid 根据username(唯一约束)\n\n            let roleid;\n            await cRequest1.getRequest(mainurl.userroleUrl, `{\"user_id\":\"${objectId}\"}&include=role_id`).then(res => {\n              roleid = res.results[0].role_id.objectId;\n            });\n            console.log(roleid); //查询菜单 查询roleid 根据roleid显示不同的菜单\n\n            let menu_array = [];\n            let result;\n            await cRequest1.getRequest(mainurl.rolemenuUrl, `{\"role_id\":\"${roleid}\"}&include=menu_id`).then(res => {\n              result = res.results;\n            });\n            result.sort((a, b) => Number(a.menu_id.order_num) - Number(b.menu_id.order_num)); //将菜单信息进行处理\n            // console.log(\"paii\",result);\n\n            result.forEach(element => {\n              if (element.menu_id.type === 1 || element.menu_id.type === 3) {\n                menu_array.push(element.menu_id);\n              }\n            });\n\n            for (let i = 0; i < menu_array.length; i++) {\n              await cRequest1.getRequest(mainurl.menuUrl, `{\"parent_id\":\"${menu_array[i].objectId}\",\"type\":2}`).then(res => {\n                menu_array[i].children = res.results;\n              });\n            }\n\n            localCache.setCache(\"menuinfo\", menu_array); // console.log(menu_array);\n\n            ElMessage({\n              message: '登录成功',\n              type: 'success',\n              duration: 1000\n            }); //跳到首页\n\n            setTimeout(() => this.$router.push({\n              path: '/main/system/technology'\n            }), 1000);\n          } else {\n            ElMessage({\n              message: '登录失败, 账号或密码错误！',\n              type: 'error',\n              duration: 1000\n            });\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    }\n\n  },\n\n  setup() {}\n\n};","map":null,"metadata":{},"sourceType":"module"}